{"chunk":4,"numChunks":9,"fileHash":"YOuAqeDV8U74YnQ9wIMRlEJcJQERugrUkolbfgwnXMM=","filePath":"backend/test/routes/zipDownload.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('downloading a zip file', () => {\n  const fileAPath = path.join(config.get('upload:imageDir'), 'imageA.jpg')\n  const fileBPath = path.join(config.get('upload:imageDir'), 'imageB.jpg')\n  const fileAHash = hash(fs.readFileSync(path.join(__filename, '../../resources/validTest.jpg')))\n  const fileBHash = hash(fs.readFileSync(path.join(__filename, '../../resources/validTest2.jpg')))\n  const token = signToken({type: ADMIN, username: 'myuser1'})\n  before(() => {\n    // move the test resources into place, as if they were uploaded\n    fs.copyFileSync(\n      path.join(__filename, '../../resources/validTest.jpg'),\n      fileAPath\n    )\n    fs.copyFileSync(\n      path.join(__filename, '../../resources/validTest2.jpg'),\n      fileBPath\n    )\n  })\n  after(() => {\n    fs.unlinkSync(fileAPath)\n    fs.unlinkSync(fileBPath)\n  })\n  it('forbids non-admins', () =>\n    request(server)\n      .get(`/zips/1?token=${signToken({type: STUDENT, username: 'myuser2'})}`)\n      .expect(401)\n  )\n  it('requires a token', () =>\n    request(server)\n      .get(`/zips/1`)\n      .expect(401)\n  )\n  it('404s on non-existing shows', () =>\n    request(server)\n      .get(`/zips/1?token=${token}`)\n      .expect(404)\n  )"}