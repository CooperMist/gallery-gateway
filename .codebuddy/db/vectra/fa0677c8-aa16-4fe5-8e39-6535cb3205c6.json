{"chunk":1,"numChunks":4,"fileHash":"vi9HWsUnM6hf2pJXeMP8MDciA0rPZCQZ+TBXJJcZnlo=","filePath":"backend/README.md","content":"10. You can visit `http://localhost:3000/graphiql` to use our interactive GraphQL playground or send requests to `http://localhost:3000/graphql` using your favorite HTTP client\n\n## Development\n\n- `server.js` - Sets up Express server\n- `schema.js` - GraphQL Schema\n- `bin/` - Entrypoint for Backpack\n- `config/` - Configuration (eg. env variables, paths, SAML)\n- `db/` - Database migrations & seeds\n- `docker/` - Development Docker containers\n- `helpers/` - Utility functions\n- `middleware/` - Express request middleware\n- `models/` - Sequelize models\n- `resolvers/` - GraphQL query, mutation, and type resolvers\n- `routes/` - Express REST endpoints (mainly for upload / download)\n- `test/` - Tests\n- `uploads/` - Where file uploads will be stored\n\nTo run the server and have it watch for changes, run `npm run watch`.\n\n[ESLint](https://eslint.org/) is setup to warn you about style violations. You can run `npm run lint` to check for style violations.\n\n## Testing\n\nTo run tests, run `npm run test`. To run an individual test, run `npm run test-file` with the path of the individual test file.\n\nWe use [Mocha](https://mochajs.org/) to run tests with the [Chai](http://www.chaijs.com/) assertion library. We use [faker.js](https://github.com/marak/Faker.js/) to generate fake test data and [supertest](https://github.com/visionmedia/supertest) to test endpoints. We use [Istanbul](https://istanbul.js.org/) to track code coverage.\n\n## Troubleshooting Common Errors\n### npm install fails\n"}