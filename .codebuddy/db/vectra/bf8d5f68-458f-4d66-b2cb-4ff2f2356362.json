{"chunk":39,"numChunks":51,"fileHash":"a+FASeiRPRDZBZ0S/9mF+yVl99YVRCx6NJRkd9d3q0M=","filePath":"backend/routes/download.js","content":"import fs from 'fs'\n  router.route('/portfolioPeriodCsv/:portfolioPeriodId')\n  .get(ensureAdminDownloadToken, (req, res, next) => {\n    PortfolioPeriod.findByPk(req.params.portfolioPeriodId, { rejectOnEmpty: true })\n      .then(portfolioPeriod => {\n        console.log(\"LOGGER PortfolioPeriod:\")\n        console.log(portfolioPeriod)\n        // find all image Entries to this show id\n        Portfolio.findAll({where: {portfolioPeriodId: portfolioPeriod.dataValues.id}})\n          .then(portfolios => {\n            console.log(\"LOGGER FULL PORTFOLIOS:\")\n            console.log(portfolios)\n                // Format the data to be csv-stringified\n                const newPortfolioSummaries = portfolios.map(portfolio => {\n                    let portfolioData = portfolio.dataValues\n                    console.log(\"LOGGER SINGLE PORTFOLIO:\")\n                    console.log(portfolio)\n                    console.log(\"LOGGER PORTFOLIO DATA:\")\n                    console.log(portfolio.dataValues)\n                    let newEntry = {\n                      studentEmail: `${portfolioData.studentUsername}@rit.edu`,\n                      title: portfolioData.title,\n                      score: portfolioData.score,\n                      submittedAt: moment(portfolioData.createdAt).format()\n                    }\n                    console.log(\"LOGGER NEW ENTRY:\")\n                    console.log(newEntry)\n                    return {...newEntry}\n                  })\n                  return {...newPortfolioSummaries}\n                }, [])\n              })\n              .then(newPortfolioSummaries => {\n                // Send csv data to browser\n                const columns = {\n                  studentEmail: 'Student Email',\n                  title: 'Title',\n                  score: 'Score',\n                  submittedAt: 'Submitted At'\n                }\n                stringifyAsync(newPortfolioSummaries, { header: true, columns: columns })\n                  .then(output => {\n                    res.status(200)\n                      .type('text/csv')\n                      .attachment(`${portfolioPeriod.dataValues.name}.csv`)\n                      .send(output)\n                  })\n                  .catch(err => {\n                    console.error(err)\n                   "}