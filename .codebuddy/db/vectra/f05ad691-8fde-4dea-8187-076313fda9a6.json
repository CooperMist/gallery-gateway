{"chunk":1,"numChunks":25,"fileHash":"IheIbb4hwNnJersVA+Z5HKTq+Up0UDJLLklzMNvgrOU=","filePath":"backend/db/seeds/20180415220000-seed-demo.js","content":"import https from 'https'\nexport const genThumbnail = (fpath) => {\n  // copy+pasted from routes/upload.js\n  //\n  const image = sharp(fpath)\n  return image\n    .metadata()\n    .then(({height, width}) => {\n      // Generate a thumnail with max width of 400px and max height of 300px\n\n      let targetWidth = 0\n      let targetHeight = 0\n      // If the item is portrait-oriented, constrain the height and scale the\n      // width proportionally\n      if (height > width) {\n        targetHeight = Math.min(300, height)\n        targetWidth = Math.floor(targetHeight / height * width)\n      } else {\n        // Otherwise, the item is landscape-oriented, constrain the width and\n        // scale the height proportionally\n        targetWidth = Math.min(400, width)\n        targetHeight = Math.floor(targetWidth / width * height)\n      }\n      // The thumbnail path is 'a/1/<guid>_thumb.jpg', for example\n      const parsedFileName = path.parse(fpath)\n      const thumbnailPath = `${parsedFileName.dir}/${parsedFileName.name}_thumb${parsedFileName.ext}`\n      return image\n        .resize(targetWidth, targetHeight)\n        // Use progressive loading for super-quick low-quality image preview\n        .jpeg({progressive: true})\n        .toFile(thumbnailPath)\n    })\n}\nexport const genId = () => Math.floor(Math.random() * 9000 + 1000)"}