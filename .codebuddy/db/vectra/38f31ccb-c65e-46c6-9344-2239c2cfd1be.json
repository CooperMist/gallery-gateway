{"chunk":2,"numChunks":4,"fileHash":"eHR5Vu2AXi9tMsN6iVu4GKKVP54xYnCqR/5WeVxr/dk=","filePath":"frontend/src/Judge/components/VotePanel.js","content":"import React, { Component } from 'react'\nclass VotePanel extends Component {\n  static propTypes = {\n    handleError: PropTypes.func.isRequired,\n    makeVote: PropTypes.func.isRequired,\n    vote: PropTypes.shape({\n      value: PropTypes.number\n    })\n  }\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      alertVisible: false,\n      alertType: ''\n    }\n  }\n  onDismiss = () => {\n    this.setState({\n      alertVisible: false,\n      alertType: ''\n    })\n  }\n  handleVote = value => {\n    const { makeVote, handleError } = this.props\n\n    makeVote(value)\n      .then(() => {\n        this.setState({\n          alertVisible: true\n        })\n        setTimeout(() => {\n          this.onDismiss()\n        }, 2000)\n      })\n      .catch(err => handleError(err.message))\n  }\n  handleKeyInput = e => {\n    const { vote } = this.props\n\n    // Listen for key presses. Only update the choice if there is none selected\n    // or the key pressed doesn't match the currently selected choice\n    if ((e.key === '1' || e.key === 'n') && (!vote || vote.value !== NO)) {\n      // 1 or n key\n      this.handleVote(NO)\n    } else if (\n      (e.key === '2' || e.key === 'm') &&\n      (!vote || vote.value !== MAYBE)\n    ) {\n      // 2 or m key\n      this.handleVote(MAYBE)\n    } else if (\n      (e.key === '3' || e.key === 'y') &&\n      (!vote || vote.value !== YES)\n    ) {\n      // 3 or y key\n      this.handleVote(YES)\n    }\n  }\n  componentDidMount () {\n    document.addEventListener('keydown', this.handleKeyInput)\n  }\n  componentWillUnmount () {\n    document.removeEventListener('keydown', this.handleKeyInput"}