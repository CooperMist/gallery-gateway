{"chunk":14,"numChunks":18,"fileHash":"vwBg+kbr14b49EtBgMTuzILb+K3HOxp0O6l1zSfMBzc=","filePath":"backend/test/resolvers/entryQuery.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('Entry Queries', function () {\n  describe('Entries Query', function () {\n    describe('Success', function () {\n      it('Gets all types of entry when multiple exist', function () {\n        return Promise.all([\n          fakeImageEntry({ path: 'foo1.jpg', horizDimInch: 5, vertDimInch: 6, mediaType: 'mymedia' }),\n          fakeVideoEntry({ videoId: 'myvideoid', provider: 'youtube' }),\n          fakeOtherEntry({ path: 'foo2.jpg' })\n        ])\n          .then(([image, video, other]) =>\n            execGraphql(\n              `query {\n                entries {\n                  id,\n                  title,\n                  ...photoFields,\n                  ...videoFields,\n                  ...otherMediaFields\n                }\n              }\n              ${photoFragment} ${videoFragment} ${otherMediaFragment}\n              `,\n              { type: 'ADMIN' }\n            )\n              .then(result => {\n                // first let's sort the returned entries by ID so we can\n                // do a stable deep equals comparison\n                result.data.entries = result.data.entries.sort((e1, e2) => parseInt(e1.id) - parseInt(e2.id))\n                expect(result).to.deep.equal({\n                  data: {\n                    entries: [\n                      {\n                        id: `${image.id}`, // must be cast to a string :(\n                        title: image.title,\n                        path: 'foo1.jpg',\n                        horizDimInch: 5,\n                        vertDimInch: 6,\n                        mediaType: 'mymedia'\n                      },\n                      {\n                        id: `${video.id}`,\n                        title: video.title,\n                        videoId: 'myvideoid',\n                        provider: 'youtube'\n                      },\n                      {\n                        id: `${other.id}`,\n                        title: other.title,\n                        path: 'foo2.jpg'\n                      }\n                    ].sort((e1,"}