{"chunk":0,"numChunks":5,"fileHash":"N9swYPd6sPagdvIWG8pfunUvXwwOqIJVevODQ0LxeM4=","filePath":"backend/test/factories.js","content":"import faker from 'faker'\nimport User from '../models/user'\nimport Group from '../models/group'\nimport Show from '../models/show'\nimport Image from '../models/image'\nimport Entry from '../models/entry'\nimport Video from '../models/video'\nimport Other from '../models/other'\nimport Vote from '../models/vote'\nimport { STUDENT, IMAGE_ENTRY, VIDEO_ENTRY, OTHER_ENTRY } from '../constants'\n// Helper for faking shows\nDate.prototype.addDays = function (days) { // eslint-disable-line no-extend-native\n  var date = new Date(this.valueOf())\n  date.setDate(date.getDate() + days)\n  return date\n}\nexport function fakeUser (opts) {\n  opts = opts || {}\n  opts.type = opts.type || STUDENT\n  opts.username = opts.username || faker.internet.userName()\n  return User.create({\n    username: opts.username,\n    firstName: opts.firstName || faker.name.firstName(),\n    lastName: opts.lastName || faker.name.lastName(),\n    type: opts.type\n  })\n}\nexport function fakeGroup (opts) {\n  opts = opts || {}\n  opts.participants = opts.participants !== undefined ? opts.participants : faker.lorem.words(5)\n  const userPromise = opts.user ? Promise.resolve(opts.user) : fakeUser()\n  return userPromise.then(user =>\n    Group.create({\n      participants: opts.participants,\n      creatorUsername: user.username\n    }))\n}"}