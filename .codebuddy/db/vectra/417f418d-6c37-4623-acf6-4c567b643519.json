{"chunk":4,"numChunks":7,"fileHash":"74ZENdnzYhI/s8DZ0FDfGhCHNceKVpYUriAanC6HxU4=","filePath":"frontend/src/Judge/reducers.js","content":"import { combineReducers } from 'redux'\nconst portfolios = (state = {}, action) => {\n  switch (action.type) {\n    case actions.FETCH_PORTFOLIO:\n      if (!action.payload.id) {\n        return state\n      }\n\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload\n        }\n      }\n    case actions.FETCH_PORTFOLIOS:\n      if (!action.payload.portfolios.length) {\n        return state\n      }\n\n      const portfoliosById = action.payload.portfolios.reduce(\n        (accum, portfolio) => {\n          accum[portfolio.id] = portfolio\n          return accum\n        },\n        {}\n      )\n      return {\n        ...state,\n        ...portfoliosById\n      }\n    default:\n      return state\n  }\n}\n//This is probably not the state but this is the state for votes\n// Example State:\n// {\n//  byId: {\n//    31: {id: 31, entry: {id: 102}, value: 2},\n//    34: {id: 34, entry: {id: 81}, value: 0}\n//  }\n//  byEntryId: {\n//    81: {id: 34, entry: {id: 81}, value: 0},\n//    102: {id: 31, entry: {id: 102}, value: 2}\n//  }\n// }\nconst initialRatingState = {\n  byId: {},\n  byPortfolioId: {}\n}"}