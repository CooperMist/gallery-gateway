{"chunk":6,"numChunks":10,"fileHash":"NwnJmqVtcw929OOjR1k4Nt7Zb/Ev6RO/04W79rmC4J8=","filePath":"backend/resolvers/mutations/entry.js","content":"import db from '../../config/sequelize'\nconst createEntry = (entry, entryType, entryId, t) => {\n  return groupPromise\n    .then(group => {\n      // We now have access to a Group instance (from attributes above).\n      // The only thing left to do is create the Entry object, which is (mostly)\n      // described by the `entry` parameter. We must first remove its `group`\n      // property and replace it with the group's ID, since our orm recognizes\n      // groupId, not a Group\n\n      let userFindPromise = Promise.resolve(null)\n      if (entry.studentUsername){\n        userFindPromise = User.findByPk(entry.studentUsername);\n      }\n\n      // clone the object\n      const newEntry = Object.assign({}, entry)\n      // remove the 'group' property\n      delete newEntry['group']\n      // create the new Entry with select properties filled-in\n      return userFindPromise.then(user => {\n\n        let userUpdatePromise = Promise.resolve(null)\n\n        if (!group && user.hometown !== entry.hometown && user.displayName !== entry.displayName){\n          userUpdatePromise = User.update(\n            {\n              hometown: entry.hometown,\n              displayName: entry.displayName\n            },\n            { where: {username: entry.studentUsername}}\n          )\n        }\n        else if (!group && user.hometown != entry.hometown){\n          userUpdatePromise = User.update(\n            {\n              hometown: entry.hometown\n            },\n            { where: {username: entry.studentUsername}}\n          )\n        }\n\n        else if (!group && user.displayName != entry.displayName){\n          userUpdatePromise = User.update(\n            {\n              displayName: entry.displayName\n            },\n            { where: {username: entry.studentUsername}}\n          )\n        }\n        delete newEntry['hometown'];\n        return userUpdatePromise.then(()=>\n          Entry.create({\n            ...newEntry,\n            entryType: entryType,\n            entryId: entryId,\n           "}