{"chunk":4,"numChunks":8,"fileHash":"BTqcXOsAMThcBAe314RsWKJAgUhWtf30vUb9gNWcfGs=","filePath":"frontend/src/Admin/components/portfolio/AssignJudgesPortfolioPeriodTable.js","content":"import React, { Component, Fragment, useEffect, useState } from 'react'\nfunction AssignJudgesPortfolioPeriodTable({\n}) {\n  const onDismissUnassignConfirmation = () => {\n    setState({\n      ...state,\n      isUnassignConfirmationOpen: false\n    })\n  }\n  const onDisplayUnassignConfirmation = () => {\n    setState({\n      ...state,\n      isUnassignConfirmationOpen: true\n    })\n  }\n  const assign = () => {\n    const judges = Object.keys(state.selectedUnassignedJudges)\n\n    if (judges.length) {\n      assignProp(judges)\n        .then(() => {\n          // force reload, state update with refetch queries not working. This would be solved with Redux Toolkit usage\n          window.location.reload();\n        })\n        .catch(err => handleError(err.message))\n    }\n  }\n  const unassign = () => {\n    const judges = Object.keys(state.selectedAssignedJudges)\n\n    if (judges.length) {\n      unassignProp(judges)\n        .then(() => {\n          // force reload, state update with refetch queries not working. This would be solved with Redux Toolkit usage\n          window.location.reload()\n        })\n        .catch(err => handleError(err.message))\n    }\n  }\n  const handleAssignedJudgesChange = selectedAssignedJudges => {\n    setState({\n      ...state,\n      selectedAssignedJudges\n    })\n  }\n  const handleUnassignedJudgesChange = selectedUnassignedJudges => {\n    setState({\n      ...state,\n      selectedUnassignedJudges\n    })\n  }"}