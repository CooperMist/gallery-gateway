{"chunk":0,"numChunks":2,"fileHash":"xnu6thyLBG5fR4BGhYwFQj5cRglnpUm9c+paU2AoYjw=","filePath":"backend/models/portfolioRating.js","content":"import User from './user'\nimport DataTypes from 'sequelize'\nimport sequelize from '../config/sequelize'\nimport { IMAGE_ENTRY, VIDEO_ENTRY, OTHER_ENTRY } from '../constants'\nimport { ALLOWED_RATING_VALUES } from '../constants'\nconst PortfolioRating = sequelize.define('portfolioRating', {\n  // id of portfolio submitted\n  portfolioId: {\n    allowNull: false,\n    type: DataTypes.INTEGER,\n    references: {\n      model: 'portfolios',\n      key: 'id'\n    },\n    onDelete: 'cascade',\n    onUpdate: 'cascade'\n  },\n  rating: {\n    type: DataTypes.DOUBLE,\n    defaultValue: 0,\n    allowNull: false\n  },\n    // The username of the judge for the Portfolio Period\n    judgeUsername: {\n    allowNull: false,\n    type: DataTypes.INTEGER,\n    references: {\n        model: 'users',\n        key: 'username'\n    },\n    onDelete: 'cascade',\n    onUpdate: 'cascade'\n},\n  createdAt: {\n    allowNull: false,\n    type: DataTypes.DATE\n  },\n  updatedAt: {\n    allowNull: false,\n    type: DataTypes.DATE\n  }\n},\n{\n    validate: {\n        ratingValueValidation () {\n          if (!ALLOWED_RATING_VALUES.has(this.value)) {\n            throw new Error('Rating value must be an integer between 1 and 5 inclusive.')\n          }\n        }\n      }\n})\n/**\n * Gets the ratings and portfolio IDs for a given portfolioPeriodId and judgeUsername as a Promise\n */\n PortfolioRating.getRatingsByPortfolioPeriodAndJudge = function getRatingsByPortfolioPeriodAndJudge (portfolioPeriodId, judgeUsername) {\n  return PortfolioRating.findAll({\n    attributes: ['portfolioId', 'value'],\n    include: [{\n      model: sequelize.models.portfolio,\n      required: true,\n      attributes: [],\n      where: {\n        portfolioPeriodId: portfolioPeriodId\n      }\n    }],\n    where: {\n      judgeUsername: judgeUsername\n    }\n"}