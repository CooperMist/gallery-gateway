{"chunk":0,"numChunks":2,"fileHash":"XcblikcavbnVbIIFNp3fyxUHsGVoXEOY4qmfliwiT0k=","filePath":"deploy/nginx/default","content":"server {\n        listen 80;\n        listen [::]:80;\n        server_name gallerygateway.rit.edu;\n        return 301 https://gallerygateway.rit.edu$request_uri;\n}\n\nserver {\n\t# SSL configuration\n\t#\n\t# listen 443 ssl default_server;\n\t# listen [::]:443 ssl default_server;\n\t#\n\t# Note: You should disable gzip for SSL traffic.\n\t# See: https://bugs.debian.org/773332\n\t#\n\t# Read up on ssl_ciphers to ensure a secure configuration.\n\t# See: https://bugs.debian.org/765782\n\t#\n\t# Self signed certs generated by the ssl-cert package\n\t# Don't use them in a production server!\n\t#\n\t# include snippets/snakeoil.conf;\n\n\troot /var/www/html;\n        \n        index index.html;\n\n        location ~* assets.*\\.(?:css|js|svg|jpg)$ {\n          try_files $uri =404;\n          expires 1y;\n          access_log off;\n          add_header Cache-Control \"public\";\n        }\n\n        # Any route without an extension (e.g. /app)\n        location / {\n          # First attempt to serve request as file, then\n          # as directory, then fall back to serving index.html.\n          try_files $uri $uri/ /index.html;\n        }\n\n        location /backend {\n                rewrite ^/backend(/.*)$ $1 break;\n                proxy_pass http://localhost:3000;\n        }\n\n    server_name gallerygateway.rit.edu; # managed by Certbot\n\n    listen [::]:443 ssl ipv6only=on; # managed by Certbot\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/gallerygateway.rit.edu/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/gallerygateway.rit.edu/privkey.pem; # managed by Certbot\n"}