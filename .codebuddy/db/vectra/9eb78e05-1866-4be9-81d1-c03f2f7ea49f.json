{"chunk":34,"numChunks":46,"fileHash":"DQQZubyGjQ+D3H+B2E8TdNYXpgsQLpU9NZS5B8BiEB4=","filePath":"backend/routes/download.js","content":"import fs from 'fs'\nrouter.route('/csv/:showId')\n  .get(ensureAdminDownloadToken, (req, res, next) => {\n    Show.findByPk(req.params.showId, { rejectOnEmpty: true })\n      .then(show => {\n        Entry.findAll({ where: { showId: req.params.showId } })\n          .then(entries => {\n            return Promise.all([\n              .then(([images, videos, otherMedia, submissionsWithSubmitters]) => {\n                return submissionsWithSubmitters.reduce((arr, { user, group, entries }) => {\n                  const newSubmissionSummaries = entries.map(entry => {\n                    let entryData = entry.dataValues\n                    let entryType = entry.entryType === IMAGE_ENTRY ? 'Image'\n                      : entry.entryType === VIDEO_ENTRY ? 'Video'\n                        : entry.entryType === OTHER_ENTRY ? 'Other' : ''\n                    let newEntry = {\n                      studentEmail: `${entryData.studentUsername}@rit.edu`,\n                      studentFirstName: user ? user.firstName : null,\n                      studentLastName: user ? user.lastName : null,\n                      studentHometown: user ? user.hometown : null,\n                      studentDisplayName: user ? user.displayName : null,\n                      isGroupSubmission: !!entryData.groupId,\n                      groupParticipants: group ? group.participants : null,\n                      entryType: entryType,\n                      title: entryData.title,\n                      comment: entryData.comment,\n                      moreCopies: entryData.moreCopies,\n                      forSale: entryData.forSale,\n                      awardWon: entryData.awardWon,\n                      invited: entryData.invited,\n                      yearLevel: entryData.yearLevel,\n                      score: entryData.score,\n                      academicProgram: entryData.academicProgram,\n                      excludeFromJudging: entryData.excludeFromJudging,\n                      submittedAt: moment(entryData.createdAt).format(),\n                      path: '',\n                      horizDimInch: '',\n                      vertDimInch: '',\n                      mediaType:"}