{"chunk":1,"numChunks":3,"fileHash":"pnmzYVtQERHgurXDNl15MU+kRdJsI1Oq2bdlmcLDUM0=","filePath":"frontend/src/Judge/actions.js","content":"import { push } from 'connected-react-router'\nexport const fetchSubmissions = showId => (dispatch, getState, client) => {\n  const { shared: { auth: { user: { username } } } } = getState()\n\n  dispatch({ type: WILL_FETCH_SUBMISSIONS, payload: showId })\n  return client\n    .query({\n      query: SubmissionsQuery,\n      variables: {\n        id: showId\n      }\n    })\n    .then(({ data: { submissions } }) =>\n      dispatch({\n        type: FETCH_SUBMISSIONS,\n        payload: {\n          submissions: submissions.filter(s => !s.excludeFromJudging),\n          username\n        }\n      })\n    )\n    .catch(err => dispatch(displayError(err.message)))\n}\nexport const fetchVotes = showId => (dispatch, getState, client) => {\n  const { shared: { auth: { user: { username } } } } = getState()\n\n  dispatch({ type: WILL_FETCH_VOTES, payload: showId })\n  return client\n    .query({\n      query: ShowVotes,\n      variables: {\n        showId,\n        username\n      }\n    })\n    .then(({ data: { votes } }) =>\n      dispatch({ type: FETCH_VOTES, payload: { votes, showId } })\n    )\n    .catch(err => dispatch(displayError(err.message)))\n}\nexport const fetchVote = submissionId => (dispatch, getState, client) => {\n  const { shared: { auth: { user: { username } } } } = getState()\n  return client\n    .query({\n      query: GetVote,\n      variables: {\n        entryId: submissionId,\n        username\n      }\n    })\n    .then(({ data: { vote } }) => dispatch({ type: FETCH_VOTE, payload: vote }))\n    .catch(err => dispatch(displayError(err.message)))\n}"}