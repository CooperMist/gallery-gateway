{"chunk":13,"numChunks":18,"fileHash":"vwBg+kbr14b49EtBgMTuzILb+K3HOxp0O6l1zSfMBzc=","filePath":"backend/test/resolvers/entryQuery.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('Entry Queries', function () {\n  describe('Entries Query', function () {\n    describe('Success', function () {\n      it('gets a video entry when it exists', () =>\n        fakeVideoEntry({ videoId: 'abc123', provider: 'youtube' })\n          .then(entry => execGraphql(\n            `query {\n              entries {\n                id,\n                title,\n                entryType,\n                ...videoFields\n              }\n            }\n            ${videoFragment}\n            `,\n            { type: 'ADMIN' }\n          )\n            .then(result => {\n              expect(result).to.deep.equal({\n                data: {\n                  entries: [\n                    {\n                      id: `${entry.id}`, // must be cast to a string :(\n                      title: entry.title,\n                      entryType: 'VIDEO',\n                      videoId: 'abc123',\n                      provider: 'youtube'\n                    }\n                  ]\n                }\n              })\n            })\n          )\n      )\n      it('gets an other media entry when it exists', () =>\n        fakeOtherEntry({ path: 'foo.jpg' })\n          .then(entry => execGraphql(\n            `query {\n              entries {\n                id,\n                title,\n                entryType,\n                ...otherMediaFields\n              }\n            }\n            ${otherMediaFragment}\n            `,\n            { type: 'ADMIN' }\n          )\n            .then(result => {\n              expect(result).to.deep.equal({\n                data: {\n                  entries: [\n                    {\n                      id: `${entry.id}`, // must be cast to a string :(\n                      title: entry.title,\n                      entryType: 'OTHER',\n                      path: 'foo.jpg'\n                    }\n                  ]\n                }\n              })\n            })\n          )\n      )"}