{"chunk":1,"numChunks":7,"fileHash":"piGpsgIWR/TX3ybZkE4tRoFGCEb6bfY2BBmDCszge8g=","filePath":"frontend/src/Judge/reducers.js","content":"import { combineReducers } from 'redux'\nconst queue = (state = initialQueueState, action) => {\n  switch (action.type) {\n    case actions.FETCH_SUBMISSIONS:\n      const submissionIds = action.payload.submissions.map(\n        submission => submission.id\n      )\n      const shuffledOrder = repeatableShuffle(\n        action.payload.username,\n        submissionIds,\n        x => x\n      )\n      return {\n        ...state,\n        order: shuffledOrder,\n        loadingSubmissions: false\n      }\n    case actions.FETCH_VOTES:\n      return {\n        ...state,\n        loadingVotes: false\n      }\n    case actions.WILL_FETCH_SUBMISSIONS:\n      return {\n        ...state,\n        loadingSubmissions: true\n      }\n    case actions.WILL_FETCH_VOTES:\n      return {\n        ...state,\n        loadingVotes: true\n      }\n    default:\n      return state\n  }\n}\n// Each show has a queue whose key in the queues state is the show's id\n// Example State:\n// {\n//   1: {order: ['1', '2', '3'], loadingSubmissions: true, loadingVotes: false},\n//   2: {order: ['9', '4', '5', '8', '6', '7'], loadingSubmissions: true, loadingVotes: false}\n// }"}