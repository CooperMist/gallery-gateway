{"chunk":2,"numChunks":4,"fileHash":"JCQcmnEpzzy99RhPH/5gBfCe+Ow8Nn7fMRAmikA96NI=","filePath":"frontend/src/Student/components/portfolio/Portfolios.js","content":"import PropTypes from 'prop-types'\nfunction Portfolios(props) {\n  const [portfolioPeriodPortfolios, setPortfolioPeriodPortfolios] = useState(new Set());\n  /**\n   * Handles displaying GraphQL erros\n   */\n  useEffect(() => {\n    if (props.error) {\n      props.error.graphQLErrors.forEach(e => {\n        props.handleError(e.message)\n      })\n    }\n  }, [props.error, props.handleError])\n  /**\n   * Handles building a relation between active portfolio periods and portfolios\n   * for tracking if a portfolio period has been submitted to\n   */\n  useEffect(() => {\n    let periodsAndPortfolios = {}\n\n    for (let i = 0; i < props.activePortfolioPeriods.length; i++) {\n      const curr_period = props.activePortfolioPeriods[i];\n      periodsAndPortfolios[curr_period.id] = null;\n    }\n\n    for (let i = 0; i < props.portfolios.length; i++) {\n      const curr_portfolio = props.portfolios[i];\n      if (periodsAndPortfolios[curr_portfolio.portfolioPeriodId] === null) {\n        periodsAndPortfolios[curr_portfolio.portfolioPeriodId] = curr_portfolio\n      }\n    }\n    setPortfolioPeriodPortfolios(periodsAndPortfolios)\n  }, [props.activePortfolioPeriods, props.portfolios])\n  const { loading, portfolios, activePortfolioPeriods } = props\n  function RenderPortfolios() {\n    if (!Array.isArray(portfolios) || portfolios.length === 0) {\n      return (\n        <Col xs={12} lg={8}>\n          <p className=\"h3\">No portfolios found.</p>\n        </Col>\n      )\n    }\n    return (\n      <Col xs={12}>\n        <div className=\"d-flex flex-column\">\n          {portfolios.map((portfolio) => {\n            return <PortfolioCard portfolio={portfolio} key={`portfolio.${portfolio.id}`} />\n          })}\n        </div>\n      </Col"}