{"chunk":5,"numChunks":13,"fileHash":"GpXOvF8WKxwDnF+WdW5RPz7CiGlqOB59c43orTD5Pz4=","filePath":"frontend/src/Student/components/portfolio/PortfolioSubmissionForm.js","content":"import axios from 'axios'\nfunction PortfolioSubmissionForm(props) {\n  /**\n   * Creates the portfolio via the graphQL mutation prop provided by the container\n   * Extracts the portfolio_id then loops over each submission and \n   * creates an entry using the porfolio_id\n   * @param {React.FormEvent} event \n   */\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setShowPreview(true);\n  }\n  async function createPortfolio() {\n    // Create the portfolio from form_data\n    setShowPreview(false);\n    const portfolio = {\n      title: form_data.title,\n      studentUsername: form_data.studentUsername,\n      portfolioPeriodId: portfolioPeriodId,\n    }\n    setIsProcessing(true);\n    const portfolio_response = await props.createPortfolio(portfolio);\n    try {\n      // Extract the portfolio id and use that to create all the entries\n      const portfolio_id = portfolio_response.data.createPortfolio.id;\n      for (let i = 0; i < form_data.submissions.length; i++) {\n        const entry = form_data.submissions[i];\n        await submitEntry(entry, portfolio_id);\n      }\n\n    } catch (e) {\n      // portfolio creation failed\n    }\n\n    // Naviagte back to the portfolios page\n    window.location.href = '/portfolios';\n  }\n  /**\n   * Updates the \n   * @param {React.FormEvent} event \n   */\n  function handleChange(event) {\n    setFormData({\n      ...form_data,\n      [event.target.name]: event.target.value\n    })\n  }\n  // Display a message if no active portfolio period id is supplied"}