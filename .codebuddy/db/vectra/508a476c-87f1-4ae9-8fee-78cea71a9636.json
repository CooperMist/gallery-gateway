{"chunk":8,"numChunks":18,"fileHash":"vwBg+kbr14b49EtBgMTuzILb+K3HOxp0O6l1zSfMBzc=","filePath":"backend/test/resolvers/entryQuery.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('Entry Queries', function () {\n  describe('Entries Query', function () {\n    describe('Validation', function () {\n      it('Rejects non-admins who are searching for someone else', () =>\n        entries(\n          '',\n          { studentUsername: 'different' },\n          { auth: { type: 'STUDENT', username: 'abc123' } }\n        )\n          .then(() => { throw new Error('should have rejected promise') })\n          .catch(e => expect(e).to.not.match(/should have rejected promise/))\n      )\n      it('Rejects non-admins who are looking for all entries', () =>\n        entries(\n          '',\n          {},\n          { auth: { type: 'STUDENT', username: 'abc123' } }\n        )\n          .then(() => { throw new Error('should have rejected promise') })\n          .catch(e => expect(e).to.not.match(/should have rejected promise/))\n      )\n      it('Gets an empty list when no entries exist', function () {\n        return entries('', {}, { auth: { type: 'ADMIN' } })\n          .then((entries) => {\n            expect(entries).to.be.length(0)\n          })\n      })\n    })"}