{"chunk":0,"numChunks":5,"fileHash":"XmeejFyXp3ArizREm1Yew0/gp84bhg6t1Crq9HB2UHQ=","filePath":"frontend/src/Admin/actions.js","content":"import ShowQuery from './queries/show.graphql'\nimport ShowsQuery from './queries/shows.graphql'\nimport AdminsQuery from './queries/admins.graphql'\nimport JudgesQuery from './queries/judges.graphql'\nimport JudgesForShowQuery from './queries/judgesForShow.graphql'\nimport { displayError } from '../shared/actions'\nimport { ZIP_PATH, CSV_PATH } from '../utils'\nexport const LOADING_DATA = 'LOADING_DATA'\nexport const FETCH_SHOW = 'FETCH_SHOW'\nexport const FETCH_SHOWS = 'FETCH_SHOWS'\nexport const FETCH_ADMINS = 'FETCH_ADMINS'\nexport const FETCH_JUDGES = 'FETCH_JUDGES'\nexport const FETCH_JUDGES_FOR_SHOW = 'FETCH_JUDGES_FOR_SHOW'\nexport const FETCH_JUDGES_BY_ASSIGNMENT_FOR_SHOW =\n  'FETCH_JUDGES_BY_ASSIGNMENT_FOR_SHOW'\nexport const ASSIGN_JUDGES_TO_SHOW = 'ASSIGN_JUDGES_TO_SHOW'\nexport const REMOVE_JUDGES_FROM_SHOW = 'REMOVE_JUDGES_FROM_SHOW'\nexport const ADD_ADMIN = 'ADD_ADMIN'\nexport const ADD_JUDGE = 'ADD_JUDGE'\nexport const fetchShow = showId => (dispatch, getState, client) => {\n  return client\n    .query({\n      query: ShowQuery,\n      variables: {\n        id: showId\n      }\n    }) // TODO: Dispatch loading action & loading finished action\n    .then(({ data: { show } }) => dispatch({ type: FETCH_SHOW, payload: show }))\n    .catch(err => dispatch(displayError(err.message)))\n}\nexport const fetchShows = () => (dispatch, getState, client) => {\n  return client\n    .query({ query: ShowsQuery }) // TODO: Dispatch loading action & loading finished action\n    .then(({ data: { shows } }) =>\n      dispatch({ type: FETCH_SHOWS, payload: shows })\n    )\n    .catch(err => dispatch(displayError"}