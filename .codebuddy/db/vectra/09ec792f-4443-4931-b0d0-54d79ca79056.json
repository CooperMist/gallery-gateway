{"chunk":37,"numChunks":38,"fileHash":"0HdfV29crxybzCYcCSJEw6NdslXesS3O1aP5Kzlwt2A=","filePath":"backend/test/resolvers/entry.js","content":"import { expect } from 'chai'\ndescribe('Entry Mutations', function () {\n  describe('OtherMedia Creation', function () {\n    describe('Successes', function () {\n      it('accepts a path string', function () {\n        return Promise.all([fakeUser(), fakeShow()])\n          .then((models) => {\n            const user = models[0]\n            const show = models[1]\n            const entry = standardEntry(user, show)\n            const createVideo = `mutation {\n            createOtherMedia( input: {\n              entry: {\n                studentUsername: \"${entry.studentUsername}\"\n                showId: ${entry.showId}\n                title: \"mytitle\"\n                comment: \"commenting\"\n                forSale: false\n                yearLevel: \"second\"\n                academicProgram: \"learning\"\n                moreCopies: false\n              }\n              path:\"foo.jpg\"\n            }){\n              entries {\n                ... on OtherMedia {\n                  path\n                }\n              }\n            }\n          }`\n            return execGraphql(createVideo, { type: 'ADMIN' })\n              .then(\n                result => {\n                  expect(result.data.createOtherMedia.entries.length).to.equal(1)\n                  expect(result.data.createOtherMedia.entries[0].path).to.equal('foo.jpg')\n                }\n              )\n          })\n      })\n    })"}