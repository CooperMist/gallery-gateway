{"chunk":0,"numChunks":1,"fileHash":"Vgm31V9ZDd8ranS7OvGwzMqR1d/2qteCBHfGRJ2Urkk=","filePath":"backend/resolvers/queries/scholarshipSubmissionQuery.js","content":"import ScholarshipSubmissions from \"../../models/scholarshipSubmissions\";\r\n\r\nexport function scholarshipSubmission(_, args, context) {\r\n    const { id } = args\r\n    return ScholarshipSubmissions.findByPk(id)\r\n}\r\n\r\nexport function scholarshipSubmissions(_, args, context) {\r\n    const { orderBy, portfolioId, portfolioPeriodId, scholarshipId } = args\r\n    let whereClause = {\r\n        where: {}\r\n    }\r\n    // Build the where clause and ensure all ids provided are an int\r\n    if(!isNaN(portfolioId)) whereClause.where.portfolioId = portfolioId\r\n    if(!isNaN(portfolioPeriodId)) whereClause.where.portfolioPeriodId = portfolioPeriodId\r\n    if(!isNaN(scholarshipId)) whereClause.where.scholarshipId = scholarshipId\r\n\r\n    // Apply ordering, if desired\r\n    const order = orderBy ? { order: [[orderBy.sort, orderBy.direction]] } : {}\r\n\r\n    return ScholarshipSubmissions.findAll(Object.assign({}, whereClause, order))\r\n}"}