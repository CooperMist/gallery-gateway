{"chunk":2,"numChunks":3,"fileHash":"O57HZoDG4xaHQBNDEwoeRUwYLqZePKquiMeUJ9fw23o=","filePath":"frontend/src/shared/components/DateRangeInput.js","content":"import React, { Component } from 'react'\nclass DateRangeInput extends Component {\n  static propTypes = {\n    startDateField: PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      input: PropTypes.shape({\n        value: PropTypes.any,\n        onChange: PropTypes.func.isRequired, // setFieldValue\n        onBlur: PropTypes.func // setFieldTouched\n      }).isRequired\n    }).isRequired,\n    endDateField: PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      input: PropTypes.shape({\n        value: PropTypes.any,\n        onChange: PropTypes.func.isRequired, // setFieldValue\n        onBlur: PropTypes.func // setFieldTouched\n      }).isRequired\n    }).isRequired\n  }\n  state = {\n    focusedInput: null\n  }\n  handleChange = values => {\n    const { startDateField, endDateField } = this.props\n    startDateField.input.onChange(startDateField.field, values.startDate)\n    endDateField.input.onChange(endDateField.field, values.endDate)\n  }\n  handleFocus = focusedInput => {\n    const { startDateField, endDateField } = this.props\n    // Set the focused input\n    this.setState({ focusedInput })\n    // Blur when both inputs have been blurred\n    switch (focusedInput) {\n      case START_DATE:\n      case END_DATE:\n        break\n      default:\n        // 'null' when unfocused\n        startDateField.input.onBlur(startDateField.field, true)\n        endDateField.input.onBlur(endDateField.field, true)\n    }\n  }"}