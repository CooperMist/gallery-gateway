{"chunk":2,"numChunks":15,"fileHash":"SNJ1HPKV6SHtX8AitT8xFdMkCjfZ33UdW+lXMkoPqXs=","filePath":"frontend/src/Admin/components/ShowSubmissionsTab.js","content":"import React, { Component, Fragment } from 'react'\nclass ShowSubmissionsTab extends Component {\n  static propTypes = {\n    updateInvite: PropTypes.func.isRequired,\n    finalizeInvites: PropTypes.func.isRequired,\n    handleError: PropTypes.func.isRequired,\n    updateExcludeFromJudging: PropTypes.func.isRequired,\n    show: PropTypes.shape({\n      finalized: PropTypes.bool.isRequired,\n      entries: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          title: PropTypes.string.isRequired,\n          entryType: PropTypes.oneOf(['PHOTO', 'VIDEO', 'OTHER']).isRequired,\n          invited: PropTypes.bool,\n          path: PropTypes.string,\n          provider: PropTypes.oneOf(['youtube', 'vimeo']),\n          videoId: PropTypes.string\n        })\n      )\n    }).isRequired\n  }\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      isFinalizeConfirmationOpen: false,\n      isSubmissionModalOpen: false,\n      viewingSubmissionId: null\n    }\n  }\n  onDismissFinalizeConfirmation = () => {\n    this.setState({\n      isFinalizeConfirmationOpen: false\n    })\n  }\n  onDismissSubmissionModal = () => {\n    this.setState({\n      isSubmissionModalOpen: false\n    })\n  }\n  onDisplayFinalizeConfirmation = () => {\n    this.setState({\n      isFinalizeConfirmationOpen: true\n    })\n  }\n  onDisplaySubmissionModal = submission => {\n    this.setState({\n      isSubmissionModalOpen: true,\n      viewingSubmissionId: submission.id\n    })\n  }\n  updateInvitation = (id, value) => {\n    const { updateInvite, handleError } = this.props\n\n    updateInvite(id, value).catch(err => handleError(err.message))\n  }"}