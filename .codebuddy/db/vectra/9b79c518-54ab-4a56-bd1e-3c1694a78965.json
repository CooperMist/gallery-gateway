{"chunk":0,"numChunks":1,"fileHash":"CopNrOgRRgstj16JFp/VGlJW/8HlVm2vgIMSUXdmD50=","filePath":"backend/server.js","content":"import path from 'path'\r\nimport cors from 'cors'\r\nimport express from 'express'\r\n// import { maskErrors } from 'graphql-errors'\r\nimport 'core-js/stable'\r\nimport 'regenerator-runtime/runtime'\r\n\r\nimport config from './config'\r\nimport { passport } from './config/passport'\r\nimport models from './models'\r\nimport router from './routes'\r\nimport parseJwtUser from './middleware/parseJwtUser'\r\n\r\nconst app = express()\r\n\r\n// Setup Model Associations\r\nmodels()\r\n\r\n// Disable 'X-Powered-By' Header (See: https://expressjs.com/en/advanced/best-practice-security.html)\r\napp.disable('x-powered-by')\r\n\r\n// When not in production, accept requests from any origin since we'll\r\n// be running the frontend and backend on separate ports. In production,\r\n// we use nginx to serve them at the same origin, so CORS is not necessary.\r\nif (config.get('NODE_ENV') !== 'production') {\r\n  app.use(cors())\r\n}\r\n\r\napp.use(express.json({ limit: '10gb' })) // Parse application/json\r\napp.use(express.urlencoded({ extended: false })) // Parse application/x-www-form-urlencoded\r\n\r\n// Initialize Passport - for SAML Auth\r\napp.use(passport.initialize())\r\n\r\n// Add JWT parsing middleware\r\napp.use(parseJwtUser)\r\n\r\n// Setup Routes\r\napp.use(router)\r\n\r\n// Don't expose GraphQL Internal Errors to the Client\r\n// maskErrors(schema)\r\n\r\n// Setup GraphiQL web interface in development\r\n// if (config.get('NODE_ENV') !== 'production') {\r\n//   app.get('/graphiql', graphiqlExpress({ endpointURL: '/graphql' }))\r\n// }\r\n\r\n// Setup static asset serving\r\napp.use('/static/uploads', express.static(path.join(__dirname, 'uploads', 'images')))\r\napp.use('/static/uploads', express.static(path.join(__dirname, 'uploads', 'pdfs')))\r\n\r\n// Setup GraphQL endpoint\r\n\r\nexport default app\r\n"}