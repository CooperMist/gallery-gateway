{"chunk":1,"numChunks":4,"fileHash":"gTtuGx0upWYGOrDjCqgWoUO0PmeyX+xH892ncB+T79s=","filePath":"frontend/src/Admin/actions.js","content":"import ShowQuery from './queries/show.graphql'\nexport const fetchShows = () => (dispatch, getState, client) => {\n  return client\n    .query({ query: ShowsQuery }) // TODO: Dispatch loading action & loading finished action\n    .then(({ data: { shows } }) =>\n      dispatch({ type: FETCH_SHOWS, payload: shows })\n    )\n    .catch(err => dispatch(displayError(err.message)))\n}\nexport const fetchAdmins = () => (dispatch, getState, client) => {\n  return client\n    .query({ query: AdminsQuery }) // TODO: Dispatch loading action & loading finished action\n    .then(({ data: { admins } }) =>\n      dispatch({ type: FETCH_ADMINS, payload: admins })\n    )\n    .catch(err => dispatch(displayError(err.message)))\n}\nexport const fetchJudges = () => (dispatch, getState, client) => {\n  return client\n    .query({ query: JudgesQuery }) // TODO: Dispatch loading action & loading finished action\n    .then(({ data: { judges } }) =>\n      dispatch({ type: FETCH_JUDGES, payload: judges })\n    )\n    .catch(err => dispatch(displayError(err.message)))\n}\nexport const fetchJudgesForShow = showId => (dispatch, getState, client) => {\n  return client\n    .query({\n      query: JudgesForShowQuery,\n      variables: {\n        id: showId\n      }\n    }) // TODO: Dispatch loading action & loading finished action\n    .then(({ data: { show } }) =>\n      dispatch({ type: FETCH_JUDGES_FOR_SHOW, payload: show })\n    )\n    .catch(err => dispatch(displayError(err.message)))\n}"}