{"chunk":28,"numChunks":38,"fileHash":"0HdfV29crxybzCYcCSJEw6NdslXesS3O1aP5Kzlwt2A=","filePath":"backend/test/resolvers/entry.js","content":"import { expect } from 'chai'\ndescribe('Entry Mutations', function () {\n  describe('Video Creation', function () {\n    describe('Successes', function () {\n      it('accepts a standard vimeo entry', function () {\n        return Promise.all([fakeUser(), fakeShow()])\n          .then((models) => {\n            const user = models[0]\n            const show = models[1]\n            const entry = standardEntry(user, show)\n            const createVideo = `mutation {\n              createVideo( input: {\n                entry: {\n                  studentUsername: \"${entry.studentUsername}\"\n                  showId: ${entry.showId}\n                  title: \"mytitle\"\n                  comment: \"commenting\"\n                  forSale: false\n                  yearLevel: \"second\"\n                  academicProgram: \"learning\"\n                  moreCopies: false\n                }\n                url:\"https://vimeo.com/45196609\"\n              }){\n                entries {\n                  yearLevel\n                  ... on Video {\n                    provider\n                    videoId\n                  }\n                }\n              }\n            }`\n            return execGraphql(createVideo, { type: 'ADMIN' })\n              .then(\n                result => {\n                  expect(result.data.createVideo.entries.length).to.equal(1)\n                  expect(result.data.createVideo.entries[0].provider).to.equal('vimeo')\n                  expect(result.data.createVideo.entries[0].videoId).to.equal('45196609')\n                  expect(result.data.createVideo.entries[0].yearLevel).to.equal('second')\n                }\n              )\n          })\n      })"}