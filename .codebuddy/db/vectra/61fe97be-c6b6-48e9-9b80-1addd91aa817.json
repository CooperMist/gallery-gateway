{"chunk":0,"numChunks":1,"fileHash":"hijqZs0XH0mb+EfMFBf2DCLA840YocDuM30HgzLVgP0=","filePath":"backend/test/routes/index.js","content":"import request from 'supertest'\r\nimport { expect } from 'chai'\r\n\r\nimport server from '../../server'\r\nimport { signUserToken } from '../util'\r\nimport { fakeUser } from '../factories'\r\n\r\ndescribe('API Routes', function () {\r\n  describe('GET /unknownroute', function () {\r\n    // Testing the status 404 for task not found\r\n    it('Returns status 404 when id is not found', function (done) {\r\n      request(server)\r\n        .get('/unknownroute/')\r\n        .expect(404, done)\r\n    })\r\n  })\r\n\r\n  describe('Simple GraphQL auth', function () {\r\n    it('rejects getting all users when not logged in', function (done) {\r\n      request(server)\r\n        .post('/graphql')\r\n        .send({'query': '{users {username}}'})\r\n        .expect((res) => {\r\n          expect(res.body).to.have.property('errors')\r\n          expect(res.body.errors).to.have.lengthOf(1)\r\n        })\r\n        .expect(200)\r\n        .end(done)\r\n    })\r\n\r\n    it('lists all users when logged in as admin', function (done) {\r\n      fakeUser({type: 'ADMIN'}).then((user) => {\r\n        const token = signUserToken(user)\r\n        request(server)\r\n          .post('/graphql')\r\n          .set('Authorization', 'Bearer ' + token)\r\n          .send({'query': '{users {username}}'})\r\n          .expect(200, {data: {users: [{username: user.username}]}})\r\n          .end(done)\r\n      })\r\n    })\r\n  })\r\n})\r\n"}