{"chunk":17,"numChunks":20,"fileHash":"1RqJBYZ3ZoWKyYAMi1bUM9TATlzvqyN0gPpCdhJq+7Y=","filePath":"backend/test/resolvers/user.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('User Resolvers', function () {\n  describe('Update User Resolver', function(){\n    it('Updates hometown', function (done) {\n      fakeUser({type: 'STUDENT', hometown:'Smallville'})\n        .then((me) => {\n          const input = {input: {\n            username: me.username,\n            firstName: 'Clark',\n            lastName: 'Kent',\n            hometown: 'Krypton'\n          }}\n          updateUser('', input, {auth: {type: 'ADMIN'}})\n            .then((user)=>{\n              expect(user.username).to.eq(me.username)\n              expect(user.hometown).to.eq('Krypton')\n              done()\n            })\n        })\n    })\n    it('Does not update other fields', function (done) {\n      fakeUser({type: 'STUDENT', firstName: 'Clark', lastName: 'Kent', hometown:'Smallville'})\n        .then((me) => {\n          const input = {input: {\n            username: me.username,\n            firstName: 'Bruce',\n            lastName: 'Wayne',\n            hometown: 'Gotham'\n          }}\n          updateUser('', input, {auth: {type: 'ADMIN'}})\n            .then((user)=>{\n              expect(user.username).to.eq(me.username)\n              expect(user.firstName).to.eq('Clark')\n              expect(user.lastName).to.eq('Kent')\n              expect(user.hometown).to.eq('Gotham')\n              done()\n            })\n        })\n    })"}