{"chunk":8,"numChunks":10,"fileHash":"x1upVwdHKN+j5QeCqERukBxwL+xkPXY2Dj+0y2g4HYo=","filePath":"backend/test/resolvers/userQuery.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('User Queries', function () {\n  describe('Users query', function () {\n    it('gives you all users when you do not input a type', function (done) {\n      Promise.all([fakeUser({username: 'user1'}), fakeUser({username: 'user2'}), fakeUser({username: 'user3'})]).then(() => {\n        users('', {}, {auth: {type: 'ADMIN'}})\n          .then((result) => {\n            expect(result).to.exist\n            expect(result.length).to.equal(3)\n            done()\n          })\n      })\n    })\n    it('gives you all judges when you request type: JUDGE', function (done) {\n      Promise.all([fakeUser({username: 'user1', type: JUDGE}),\n        fakeUser({username: 'user2', type: JUDGE}),\n        fakeUser({username: 'user3'})]).then(() => {\n        users('', {type: JUDGE}, {auth: {type: 'ADMIN'}})\n          .then((result) => {\n            expect(result.length).to.equal(2)\n            expect(result[0].username).to.equal('user1')\n            expect(result[1].username).to.equal('user2')\n            done()\n          })\n      })\n    })\n    it('gives you all students when you request type: STUDENT', function (done) {\n      Promise.all([fakeUser({username: 'user1', type: JUDGE}),\n        fakeUser({username: 'user2', type: JUDGE}),\n        fakeUser({username: 'user3'})]).then(() => {\n        users('', {type: STUDENT}, {auth: {type: 'ADMIN'}})\n          .then((result) => {\n            expect(result.length).to.equal(1)\n            expect(result[0].username).to.equal('user3')\n            done()\n          })\n"}