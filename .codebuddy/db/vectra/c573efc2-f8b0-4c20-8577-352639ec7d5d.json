{"chunk":2,"numChunks":3,"fileHash":"GzsOlYvsJZ/5qgTeuKRT+ZKUTxdvLYM1uqTbqIWSq9I=","filePath":"frontend/src/Admin/components/portfolio/PortfolioPeriods.js","content":"import React, { useEffect, useState } from 'react'\nfunction PortfolioPeriods(props) {\n  const { loading } = props\n  const [pastPortfolioPeriods, setPastPortfoliosPeriods] = useState([]);\n  const [activePortfolioPeriods, setActivePortfolioPeriods] = useState([]);\n  const [futurePortfolioPeriods, setFuturePortfolioPeriods] = useState([]);\n  /**\n   * Handles updating portfolio periods state whenever the portfolioPeriods prop changes\n   * Also helps ensure portfolioPeriods is always an array\n   */\n  useEffect(() => {\n    if (Array.isArray(props.portfolioPeriods)) {\n      const newPastPPs = [];\n      const newActivePPs = [];\n      const newFuturePPs = [];\n\n      const today = new Date();\n      for (let i = 0; i < props.portfolioPeriods.length; i++) {\n        const curr_portfolio = props.portfolioPeriods[i];\n        const submission_start_date = new Date(curr_portfolio.startDate);\n        const judging_end_date = new Date(curr_portfolio.judgingEndDate);\n        // Portfolios with end dates before today are past portfolios\n        if (judging_end_date < today) {\n          newPastPPs.push(curr_portfolio);\n        }\n        // Portfolios with judging end dates of today or later AND a submission start date before today are active\n        else if (submission_start_date < today) {\n          newActivePPs.push(curr_portfolio);\n        }\n        // All other portfolios are future portfolio periods\n        else {\n          newFuturePPs.push(curr_portfolio);\n        }\n      }\n      setPastPortfoliosPeriods(newPastPPs);\n      setActivePortfolioPeriods(newActivePPs);\n      setFuturePortfolioPeriods(newFuturePPs);\n    }\n  }, [props.portfolioPeriods])\n  /**\n   * Handles displaying errors sent from GraphQL API\n   */"}