{"chunk":0,"numChunks":2,"fileHash":"tFrMxaKRoTRQgKeH+FP8yVKK+mTLWHiD1e1RZVyswOE=","filePath":"frontend/README.md","content":"# Gallery Gateway Frontend\n\n## Getting Started\n\n### Prerequisites\n\nYou'll need [Node](https://nodejs.org/en/download/) >= 8.x and [Yarn](https://yarnpkg.com/en/docs/install) >= 1.6 to be installed.\n\n### Installation\n\n1. Install dependencies: `yarn install`\n2. Start the development server: `yarn start`\n3. Visit `http://localhost:5000` in your favorite browser\n\n_NOTE: When running the server, you may see warnings about the 'history' package. You can safely ignore them._\n\n## Development\n\nIn development, our app assumes that you will be running the GraphQL API on `http://localhost:3000`.\n\nThe frontend is split up into three main sections: `Admin`, `Judge`, and `Student`.\n\nIn each, we have:\n- `actions.js` - Redux actions and action creators\n- `Page.js` - Top-level routing for this section\n- `reducers.js` - Redux reducer for this section\n- `components/` - Presentational components (which may also manage their own internal React state)\n- `containers/` - Container components which wrap presentational components with Redux and GraphQL functions\n- `mutations/` - GraphQL mutations\n- `pages/` - Layout for each page in this section\n- `queries/` - GraphQL queries\n\nSince Admin, Judge, and Student workflows are generally mutually exclusive, we aim for minimal overlap between each section.\n\nWe transpile our code using [Babel](https://babeljs.io/) and target IE 11 because there are still computers at RIT which run Windows 7 and IE 11.\n\n[ESLint](https://eslint.org/) is setup to warn you about style violations. Additionally, you should run `yarn run format` to automatically format the code using [Prettier](https://prettier.io/).\n\n## Testing\n\n"}