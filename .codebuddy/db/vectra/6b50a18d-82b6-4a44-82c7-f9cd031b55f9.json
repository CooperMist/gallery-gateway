{"chunk":3,"numChunks":5,"fileHash":"XmeejFyXp3ArizREm1Yew0/gp84bhg6t1Crq9HB2UHQ=","filePath":"frontend/src/Admin/actions.js","content":"import ShowQuery from './queries/show.graphql'\nexport const fetchJudgesByAssignmentForShow = showId => (\n  dispatch,\n  getState,\n  client\n) => {\n  return Promise.all([\n    client.query({\n      query: JudgesForShowQuery,\n      variables: {\n        id: showId\n      }\n    }),\n    dispatch(fetchShows()),\n    dispatch(fetchJudges())\n  ])\n    .then(([{ data: { show }, loading }]) => {\n      if (loading) {\n        dispatch({\n          type: LOADING_DATA, // TODO: Do something w/ this\n          payload: {}\n        })\n      } else {\n        dispatch({\n          type: FETCH_JUDGES_BY_ASSIGNMENT_FOR_SHOW,\n          payload: show\n        })\n      }\n    })\n    .catch(err => dispatch(displayError(err.message)))\n}\nexport const assignJudgesToShow = (showId, usernames) => (\n  dispatch,\n  getState,\n  client\n) => {\n  dispatch({\n    type: ASSIGN_JUDGES_TO_SHOW,\n    payload: {\n      id: showId,\n      usernames\n    }\n  })\n}\nexport const removeJudgesFromShow = (showId, usernames) => (\n  dispatch,\n  getState,\n  client\n) => {\n  dispatch({\n    type: REMOVE_JUDGES_FROM_SHOW,\n    payload: {\n      id: showId,\n      usernames\n    }\n  })\n}\nexport const addAdmin = admin => (dispatch, getState, client) => {\n  dispatch({\n    type: ADD_ADMIN,\n    payload: admin\n  })\n}\nexport const addJudge = judge => (dispatch, getState, client) => {\n  dispatch({\n    type: ADD_JUDGE,\n    payload: judge\n  })\n}\nexport const downloadShowZip = showId => (dispatch, getState, client) => {\n  const { shared: { auth: { downloadToken } } } = getState()\n\n  window.open(\n    `${ZIP_PATH}shows/${show"}