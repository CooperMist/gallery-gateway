{"chunk":3,"numChunks":7,"fileHash":"VKjoLJ98P7cs0hkUwF13Fs4mH989p0OTc5PDaJYBlZI=","filePath":"frontend/src/Judge/reducers.js","content":"import { combineReducers } from 'redux'\nconst votes = (state = initialVoteState, action) => {\n  switch (action.type) {\n    case actions.FETCH_VOTES:\n      if (!action.payload.votes.length) {\n        return state\n      }\n\n      const votesById = action.payload.votes.reduce((accum, vote) => {\n        accum[vote.id] = vote\n        return accum\n      }, {})\n      const votesByEntryId = action.payload.votes.reduce((accum, vote) => {\n        accum[vote.entry.id] = vote\n        return accum\n      }, {})\n\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          ...votesById\n        },\n        byEntryId: {\n          ...state.byEntryId,\n          ...votesByEntryId\n        }\n      }\n    case actions.FETCH_VOTE:\n      if (!action.payload.id) {\n        return state\n      }\n\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [action.payload.id]: action.payload\n        },\n        byEntryId: {\n          ...state.byEntryId,\n          [action.payload.entry.id]: action.payload\n        }\n      }\n    default:\n      return state\n  }\n}\n// Example State:\n// {\n//   1: {id: '1', title...},\n//   2: {id: '2', title...}\n// }"}