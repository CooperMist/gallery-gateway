{"chunk":0,"numChunks":14,"fileHash":"5KGj9fTmdePIUoA8EInazVi4XBlW3sOIhhOCgK3ctIs=","filePath":"frontend/src/Admin/components/CreateShowForm.js","content":"import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Form,\n  FormGroup,\n  FormFeedback,\n  Label,\n  Button,\n  Row,\n  Col\n} from 'reactstrap'\nimport { Formik, Field } from 'formik'\nimport * as yup from 'yup'\nimport styled from 'styled-components'\nimport moment from 'moment'\nimport DateRangeInput from '../../shared/components/DateRangeInput'\n// Validates another date field is after this date field\n// eg.\n//   startDate: yup.date(),\n//   endDate: yup.date().isAfter(yup.ref('startDate'), 'End Date must come after Start Date'),\nyup.addMethod(yup.date, 'isAfter', function isAfter (ref, msg) {\n  // Can't use arrow function because we rely on 'this' referencing yup's internals\n  return this.test({\n    name: 'isAfter',\n    exclusive: true, // Validation errors don't stack\n    // NOTE: Intentional use of single quotes - yup will handle the string interpolation\n    // 'path' - yup provides this; key associated w/ yup schema\n    // 'reference' - defined in params\n    message: msg || '${path} must come after ${reference}', // eslint-disable-line no-template-curly-in-string\n    params: {\n      reference: ref.path\n    },\n    test (value) {\n      return moment(value).isAfter(this.resolve(ref))\n    }\n  })\n})\nconst CalendarContainer = styled.div`\n  margin-bottom: 25px;\n`"}