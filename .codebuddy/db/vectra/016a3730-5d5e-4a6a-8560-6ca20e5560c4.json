{"chunk":0,"numChunks":1,"fileHash":"440IjNtl2QxZLW7C6wYeyzuenAbl17LS72w5OO3QiVg=","filePath":"frontend/src/Judge/components/Shows.js","content":"import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport ShowCard from '../components/ShowCard'\r\nimport Loading from '../../shared/components/Loading'\r\n\r\nconst NoShowsContainer = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: large;\r\n`\r\nclass Shows extends Component {\r\n  componentDidUpdate () {\r\n    const { error, handleError } = this.props\r\n    if (error) {\r\n      error.graphQLErrors.forEach(e => {\r\n        handleError(e.message)\r\n      })\r\n    }\r\n  }\r\n\r\n  renderShows = user => {\r\n    if (user && user.shows.length) {\r\n      return user.shows.map(show => <ShowCard key={show.id} {...show} />)\r\n    }\r\n    return (\r\n      <NoShowsContainer>\r\n        You are not currently assigned to any future shows\r\n      </NoShowsContainer>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    const { loading, user } = this.props\r\n\r\n    return <div>{loading ? <Loading /> : this.renderShows(user)}</div>\r\n  }\r\n}\r\n\r\nShows.propTypes = {\r\n  user: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.object\r\n}\r\nexport default Shows\r\n"}