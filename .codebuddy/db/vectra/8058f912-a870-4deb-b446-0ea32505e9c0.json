{"chunk":21,"numChunks":26,"fileHash":"1Flx/2T3wFjL/sSgt8GQYvuj3jYynpCkxmSTTNthx4E=","filePath":"frontend/src/Student/components/SubmissionForm.js","content":"import React, { Component, Fragment } from 'react'\nclass SubmissionForm extends Component {\n  render() {\n    return (\n      <FormGroup>\n        <Fragment>\n          <Formik\n            {({\n            }) => {\n              return (\n                <Form onSubmit={handleSubmit} style={{ marginBottom: '75px' }}>\n                  <Row>\n                    <Col xs='12' md='8' style={{ margin: '0 auto' }}>\n                      {this.props.type === 'Video' ? <FormGroup>\n                        <Label>YouTube or Vimeo Video URL</Label>\n                        <Field\n                          type=\"url\"\n                          id=\"url\"\n                          name=\"url\"\n                          className=\"form-control\"\n                          placeholder=\"\"\n                          required\n                        />\n                        {this.renderErrors(touched, errors, 'url')}\n                      </FormGroup>\n                        : null}\n                      <FormGroup>\n                        <Label>Title</Label>\n                        <Field\n                          type='text'\n                          id='title'\n                          name='title'\n                          className='form-control'\n                          required\n                        />\n                        {this.renderErrors(touched, errors, 'title')}\n                      </FormGroup>\n                      <FormGroup>\n                        <Label for='comment'>Artist Comment (Optional)</Label>\n                        <Field\n                          component='textarea'\n                          id='comment'\n                          name='comment'\n                          className='form-control'\n                          rows={4}\n                        />\n                        {this.renderErrors(touched, errors, 'comment')}\n                      </FormGroup>\n                      {values.submittingAsGroup === 'no' ? (\n                        <HomeTownInput\n                          hometownNeeded={!this.props.user.hometown}\n                          values={values}\n                          touched={touched}\n                          errors={errors}\n                          renderErrors={this.renderErrors}\n                        />\n                      ) : null}\n                      <DisplayNameInput\n                        displayNameNeeded={!this.props.user.displayName}\n                        values={values}\n                        touched={touched}\n                        errors={errors}\n                        renderErrors={this.renderErrors}\n                      />"}