{"chunk":4,"numChunks":26,"fileHash":"1Flx/2T3wFjL/sSgt8GQYvuj3jYynpCkxmSTTNthx4E=","filePath":"frontend/src/Student/components/SubmissionForm.js","content":"import React, { Component, Fragment } from 'react'\nclass SubmissionForm extends Component {\n  buildValidationSchema() {\n    const isRequiredString = yup.string().required('Required') // required string field\n    const isRequiredNumber = yup.number().required('Required') // required number field\n    const radioValues = yup.string().required('Required').oneOf(['yes', 'no']) // radio values\n    const isPhoto = this.props.type === 'Photo' // form is for photo submission\n\n    return yup.object().shape({\n      academicProgram: isRequiredString,\n      yearLevel: isRequiredString,\n      title: isRequiredString,\n      distributionAllowed: radioValues,\n      submittingAsGroup: radioValues,\n      forSale: radioValues,\n      moreCopies: radioValues,\n      groupParticipants: yup.string().when('submittingAsGroup', {\n        is: 'yes',\n        then: isRequiredString\n      }),\n      comment: yup.string(),\n      hometown: yup.string().when('submittingAsGroup', {\n        is: 'no',\n        then: isRequiredString\n      }),\n      // conditional schema for different types\n      mediaType: isPhoto ? isRequiredString.nullable() : null, // react-select uses 'null' to represent when the value is cleared\n      horizDimInch: isPhoto ? isRequiredNumber.positive('Width Must be Positive') : null,\n      vertDimInch: isPhoto ? isRequiredNumber.positive('Height Must be Positive') : null,\n      url: this.props.type === 'Video' ? isRequiredString.url('Must be a valid URL') : null,\n      path: this.props.type !== 'Video' ? isRequiredString : null\n    })\n  }\n  // Create an entry, show the success modal, and then go to the dashboard"}