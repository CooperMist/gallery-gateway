{"chunk":0,"numChunks":1,"fileHash":"FLs1UYxKZ6Pe2Rytly0lJnWaLRaVks30e9/KCCcGifY=","filePath":"backend/resolvers/mutations/rating.js","content":"import Vote from '../../models/vote'\nimport Entry from '../../models/entry'\nimport User from '../../models/user'\nimport { UserError } from 'graphql-errors'\nimport { ADMIN, JUDGE, STUDENT } from '../../constants'\nimport PortfolioPeriodJudge from '../../models/portfolioPeriodJudge'\nfunction judgeIsAllowedToVote(judgeUsername, userType, portfolioPeriodId) {\n    // Admins can vote on any show\n    if (userType === ADMIN) {\n      return Promise.resolve();\n    }\n  \n    // Students may not vote\n    if (userType === STUDENT) {\n      return Promise.reject(new UserError('Students may not vote'));\n    }\n  \n    // Judges may only vote on entries submitted to shows they've been assigned to.\n    return PortfolioPeriodJudge.findOne({\n      where: {\n        portfolioPeriodId: portfolioPeriodId,\n        judgeUsername: judgeUsername,\n      },\n    }).then((portfolioPeriodJudge) => {\n      if (!portfolioPeriodJudge) {\n        return Promise.reject(\n          new UserError('Judge is not assigned to this portfolio period')\n        );\n      }\n    }\n    );\n}\n//EVERYTHING ABOVE IS FINE, NEED TO WORK ON BELOW"}