{"chunk":0,"numChunks":1,"fileHash":"sWEevMJClH70gnCvGGXgV4ToCoYCHR0/1f/zhCrRH/8=","filePath":"frontend/src/Student/containers/OtherMediaSubmissionForm.js","content":"import { graphql } from 'react-apollo'\r\nimport { push } from 'connected-react-router'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'recompose'\r\n\r\nimport { uploadImage, uploadPDF, clearPreview } from '../actions'\r\nimport { displayError, setUserHometown, setUserDisplayName} from '../../shared/actions'\r\n\r\nimport OtherMediaSubmissionForm from '../components/OtherMediaSubmissionForm'\r\nimport CreateOtherMediaEntry from '../mutations/createOtherMediaEntry.graphql'\r\nimport ShowForSubmission from '../queries/showForSubmission.graphql'\r\n\r\nconst mapStateToProps = state => ({\r\n  previewFile: state.student.ui.submission.previewFile || {},\r\n  user: state.shared.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  done: () => dispatch(push('/')),\r\n  handlePDFUpload: file => dispatch(uploadPDF(file)),\r\n  handleImageUpload: file => dispatch(uploadImage(file)),\r\n  handleHometown: hometown => dispatch(setUserHometown(hometown)),\r\n  handleDisplayName: displayName => dispatch(setUserDisplayName(displayName)),\r\n  clearPreview: () => dispatch(clearPreview()),\r\n  handleError: message => dispatch(displayError(message))\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  graphql(CreateOtherMediaEntry, {\r\n    props: ({ mutate }) => ({\r\n      create: entry =>\r\n        mutate({\r\n          variables: { input: entry }\r\n        })\r\n    })\r\n  }),\r\n  graphql(ShowForSubmission, {\r\n    options: ownProps => ({\r\n      variables: {\r\n        id: ownProps.id\r\n      }\r\n    })\r\n  })\r\n)(OtherMediaSubmissionForm)\r\n"}