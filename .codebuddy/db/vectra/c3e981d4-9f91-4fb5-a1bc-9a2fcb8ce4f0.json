{"chunk":0,"numChunks":1,"fileHash":"PwXYVkjdelD0uytxHYm0yMgrMiDMbtoQ2HDbXGPdW1E=","filePath":"frontend/src/shared/components/InfoPopover.js","content":"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\n\r\n// Fontawesome icons\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome'\r\nimport FaInfo from '@fortawesome/fontawesome-free-solid/faInfo';\r\n\r\nconst InfoPopover = (props) => {\r\n    const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n    const toggle = () => setPopoverOpen(!popoverOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Button id={props.id} type=\"button\" color=\"link\" onClick={toggle} className=\"p-0\">\r\n                <FontAwesomeIcon icon={FaInfo} size='1x' />\r\n            </Button>\r\n            <Popover placement=\"bottom\" isOpen={popoverOpen} target={props.id} toggle={toggle}>\r\n                { /* Only render the header if a title was passed */}\r\n                {props.title ? (<PopoverHeader>{props.title}</PopoverHeader>) : null}\r\n                <PopoverBody>{props.content}</PopoverBody>\r\n            </Popover>\r\n        </div>\r\n    );\r\n}\r\n\r\nInfoPopover.propTypes = {\r\n    /* id value for the popover */\r\n    id: PropTypes.string.isRequired,\r\n    /* Title of the popover container */\r\n    title: PropTypes.string,\r\n    /* Content rendered in the popover. Can be text or JSX */\r\n    content: PropTypes.any\r\n}\r\n\r\nexport default InfoPopover;"}