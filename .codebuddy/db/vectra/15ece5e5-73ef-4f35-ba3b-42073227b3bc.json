{"chunk":22,"numChunks":27,"fileHash":"nTZOypT/nEM5cNuamEG+wsQ/tKipVKAjaQgt5wY72EQ=","filePath":"backend/test/resolvers/show.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('Show Resolvers', function () {\n  describe('Assign to show', function () {\n    it('Does not allow non-admins', function () {\n      expect(() =>\n        assignToShow('', {}, {auth: {type: 'STUDENT', username: 'billy'}})\n      ).to.throw(/Permission Denied/)\n    })\n    it('Notifies when show does not exist', function (done) {\n      const input = {show: 50, usernames: ['user1']}\n      assignToShow('', input, {auth: {type: 'ADMIN'}})\n        .catch((err) => {\n          expect(err).to.exist\n          expect(err.message).to.equal('Show Not Found')\n          done()\n        })\n    })\n    it('Notifies when any of the given usernames are not valid ', function (done) {\n      fakeShow().then((s) => {\n        const input = {showId: s.id, usernames: ['notAUserInTheSystem']}\n        assignToShow('', input, {auth: {type: 'ADMIN'}})\n          .catch((err) => {\n            expect(err).to.exist\n            expect(err.message).to.equal('Cannot find one or more usernames')\n            done()\n          })\n      })\n    })\n    it('Does not allow an empty list of usernames', function (done) {\n      fakeShow().then((s) => {\n        const input = {showId: s.id, usernames: []}\n        assignToShow('', input, {auth: {type: 'ADMIN'}})\n          .catch((err) => {\n            expect(err).to.exist\n            expect(err.message).to.equal('Please input one or more usernames')\n            done()\n          })\n      })\n    })"}