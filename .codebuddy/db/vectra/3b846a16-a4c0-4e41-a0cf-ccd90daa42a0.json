{"chunk":0,"numChunks":1,"fileHash":"NVrAw+G6rm1ut6OZtaITmZQgnLubAoZgywiUVgfy7Tg=","filePath":"frontend/src/Judge/containers/VotePanel.js","content":"import { graphql } from 'react-apollo'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'recompose'\r\n\r\nimport { fetchVote } from '../actions'\r\nimport { displayError } from '../../shared/actions'\r\nimport VotePanel from '../components/VotePanel'\r\nimport SendVote from '../mutations/sendVote.graphql'\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.shared.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchVote: submissionId => dispatch(fetchVote(submissionId)),\r\n  handleError: message => dispatch(displayError(message))\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  graphql(SendVote, {\r\n    props: ({ mutate, ownProps }) => ({\r\n      makeVote: value =>\r\n        mutate({\r\n          variables: {\r\n            input: {\r\n              judgeUsername: ownProps.user.username,\r\n              entryId: parseInt(ownProps.submission.id),\r\n              value\r\n            }\r\n          }\r\n        }).then(() => ownProps.fetchVote(ownProps.submission.id))\r\n    })\r\n  })\r\n)(VotePanel)\r\n"}