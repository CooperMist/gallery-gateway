{"chunk":0,"numChunks":1,"fileHash":"Hlj2WNcDkvMHQMbtOEw6wxY7kpWPiSSxMGX2T4fDrFQ=","filePath":"backend/resolvers/mutations/scholarship.js","content":"\r\nimport { UserError } from 'graphql-errors'\r\nimport { ADMIN } from '../../constants'\r\nimport Scholarship from '../../models/scholarship'\r\n\r\nexport async function createScholarship (_, args, context) {\r\n  // only admins can create scholarships\r\n  if (context.authType !== ADMIN) {\r\n    throw new UserError('Permission Denied')\r\n  }\r\n  const {name, description} = args.input\r\n\r\n  // All scholraships are considered active when created\r\n  const newScholarship = {\r\n    name,\r\n    description,\r\n    active: true\r\n  }\r\n  return Scholarship.create(newScholarship)\r\n}\r\n\r\n\r\n/**\r\n * Handles updating portfolio periods in the database\r\n * from a graphql mutation\r\n */\r\n export function updateScholarship(_, args, context) {\r\n  // Only admins can update scholarships\r\n  if (context.authType !== ADMIN) {\r\n    throw new UserError('Permission Denied')\r\n  }\r\n  return Scholarship.findByPk(args.id)\r\n    .then((scholarship) => {\r\n      return scholarship.update(args.input, {\r\n        // All fields that are allowed to be updated\r\n        fields: ['name', 'description', 'active']\r\n      })\r\n    })\r\n}"}