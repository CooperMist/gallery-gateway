{"chunk":36,"numChunks":46,"fileHash":"rgY5LIVyu8ZXHuBTfXMXoWx/ctH+OGAgjLxB0j9j1Bs=","filePath":"backend/routes/download.js","content":"import fs from 'fs'\n  router.route('/portfolioPeriodCsv/:portfolioPeriodId')\n  .get(ensureAdminDownloadToken, async (req, res) => {\n    const portfolioPeriod = await PortfolioPeriod.findByPk(req.params.portfolioPeriodId, { rejectOnEmpty: true })\n\n    const portfolios = await Portfolio.findAll({ where: { portfolioPeriodId: portfolioPeriod.dataValues.id } })\n\n    const newPortfolioSummaries = portfolios.map(portfolio => {\n      let portfolioData = portfolio.dataValues\n\n      const newEntry = {\n        studentEmail: `${portfolioData.studentUsername}@rit.edu`,\n        title: portfolioData.title,\n        score: portfolioData.score,\n        submittedAt: moment(portfolioData.createdAt).format()\n      }\n      return newEntry\n    });\n\n    const columns = {\n      studentEmail: 'Student Email',\n      title: 'Title',\n      score: 'Score',\n      submittedAt: 'Submitted At'\n    }\n\n    const csvOutput = await stringifyAsync(newPortfolioSummaries, { header: true, columns: columns })\n    res.status(200)\n      .type('text/csv')\n      .attachment(`${portfolioPeriod.name}.csv`)\n      .send(csvOutput)\n  }\n  )\n/*\n * Look up all Images for these Entries to add the 'path' attribute to\n * all entry objects.\n * Params:\n *   entries: [Entry]\n * Evaluates to:\n *   [Entry]\n */"}