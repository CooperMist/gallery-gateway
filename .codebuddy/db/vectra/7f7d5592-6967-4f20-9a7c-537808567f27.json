{"chunk":2,"numChunks":3,"fileHash":"QNjGnnYEG0Pj7LBwokTmYzhNjVPm2npTghwefq7i8aw=","filePath":"frontend/src/shared/components/CheckboxTable.js","content":"import React, { Component } from 'react'\nclass MultiCheckTable extends Component {\n  static propTypes = {\n    columns: PropTypes.array.isRequired,\n    data: PropTypes.array.isRequired,\n    unique: PropTypes.string.isRequired,\n    // eg. if 'unique' is 'username',\n    // 'selected' could be used like:\n    // { user1: true, user2: true }\n    // but should not be used like:\n    // { user1: false }\n    // as this component only checks for prescence in 'selected' and total\n    // number of keys. In the second example 'user1' would still be considered selected.\n    // Also note, this component does not verify that the keys in 'selected' are valid 'unique' properties in 'data'.\n    selected: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  }\n  static defaultProps = {\n    data: [],\n    selected: {}\n  }\n  handleSelectRow = row => {\n    const { selected, onChange } = this.props\n\n    const rows = {\n      ...selected\n    }\n    if (rows[row]) {\n      // We're unchecking this row, so remove the key\n      delete rows[row]\n    } else {\n      // We're checking this row, so add it in\n      rows[row] = true\n    }\n\n    onChange(rows)\n  }\n  handleSelectAll = () => {\n    const { data, unique, selected, onChange } = this.props\n\n    // If none are selected, select them all\n    // If some are selected, unselect them all (aka select none of them)\n    const areSomeSelected = Object.keys(selected).length > 0\n    const rows = {}\n\n    if (!areSomeSelected) {\n      data.forEach(row => {\n        rows[row[unique]] = true\n      })\n    }\n\n    onChange(rows)\n  }"}