{"chunk":4,"numChunks":5,"fileHash":"ewB7LRlYOG8sTglWLOUqiHgFTNVVZm0WZh7JlCJKaWI=","filePath":"backend/test/routes/fileUpload.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('Image upload', function () {\n  it('saves valid images from students at expected location', () =>\n    fakeUser({ username: 'user1', type: 'STUDENT' })\n      .then((user) =>\n        request(server)\n          .post('/static/upload/image')\n          .set('Authorization', 'Bearer ' + signUserToken(user))\n          .attach('image', 'test/resources/validTest.jpg')\n          .expect((res) => {\n            expect(res.body).to.have.property('path')\n            const parsedPath = path.parse(res.body.path)\n            expect(fs.existsSync(imageDir + '/' +\n              res.body.path)).to.be.true\n            expect(\n              fs.existsSync(\n                imageDir + '/' +\n                parsedPath.dir + '/' +\n                parsedPath.name +\n                '_thumb' +\n                parsedPath.ext\n              ),\n              'Thumbnail must exist'\n            ).to.be.true\n          })\n          .expect(201)\n      )\n  )\n  it('saves valid images from admin at expected location', function (done) {\n    fakeUser({ username: 'user2', type: 'ADMIN' })\n      .then((user) => {\n        const token = signUserToken(user)\n        request(server)\n          .post('/static/upload/image')\n          .set('Authorization', 'Bearer ' + token)\n          .attach('image', 'test/resources/validTest.jpg')\n          .expect((res) => {\n            expect(res.body).to.have.property('path')\n            expect(fs.existsSync(imageDir + '/' +\n              res.body.path)).to.be.true\n          })\n          .expect(201)\n          .end(done)\n      })\n  })"}