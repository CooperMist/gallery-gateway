{"chunk":12,"numChunks":15,"fileHash":"SNJ1HPKV6SHtX8AitT8xFdMkCjfZ33UdW+lXMkoPqXs=","filePath":"frontend/src/Admin/components/ShowSubmissionsTab.js","content":"import React, { Component, Fragment } from 'react'\nclass ShowSubmissionsTab extends Component {\n  render () {\n    return (\n      <Fragment>\n        <ReactTable\n          columns={[\n            {\n              id: 'artist',\n              Header: 'Artist',\n              accessor: submission => {\n                // Allows for sorting by student submitter's name\n                const student = submission.student || submission.group.creator\n                return `${student.username}`\n              },\n              Cell: ({ original: submission }) =>\n                !submission.group ? (\n                  `${submission.student.lastName}, ${\n                    submission.student.firstName\n                  } (${submission.student.username})`\n                ) : (\n                  <Fragment>\n                    <small>Group</small>\n                    <p>\n                      {submission.group.creator.lastName},{' '}\n                      {submission.group.creator.firstName} ({\n                        submission.group.creator.username\n                      })\n                    </p>\n                    <p>Participants: {submission.group.participants}</p>\n                  </Fragment>\n                )\n            },\n            {\n              id: 'dimensions',\n              accessor: submission =>\n                // Allows for sorting by area\n                submission.entryType === 'PHOTO'\n                  ? submission.horizDimInch * submission.vertDimInch\n                  : 0,\n              Header: 'Dimensions',\n              Cell: ({ original: submission }) =>\n                submission.entryType === 'PHOTO'\n                  ? `${submission.horizDimInch} in. \\u00D7 ${\n                    submission.vertDimInch\n                  } in.`\n                  : 'n/a'\n            },\n            {\n              Header: 'Score',\n              accessor: 'score',\n              Cell: ({ original: submission }) => submission.score.toFixed(3)\n            },\n            {\n              Header: 'Allowed',\n              maxWidth: 75,\n              sortable: false,\n              style: { textAlign: 'center' },\n              Cell: ({ original: submission }) =>\n                submission.excludeFromJudging ? (\n                  <FontAwesomeIcon icon={FaClose} size='2x'"}