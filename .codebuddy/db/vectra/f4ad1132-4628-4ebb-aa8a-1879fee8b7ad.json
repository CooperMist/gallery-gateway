{"chunk":0,"numChunks":1,"fileHash":"Jlz4daOxquZ5LlNoY+0kuWl0GVXlydbLa2PPEoWINf8=","filePath":"backend/routes/auth.js","content":"import { Router } from 'express'\nimport config from '../config'\nimport { signToken } from '../helpers/jwt'\nimport { passport, samlStrategy } from '../config/passport'\nconst router = Router()\nconst jwtConfig = config.get('auth:jwt')\nconst samlConfig = config.get('auth:saml')\nrouter.route('/auth/login')\n  .get(\n    passport.authenticate('saml', { failureRedirect: '/auth/login/fail' }),\n    (req, res, next) => {\n      const token = signToken(req.user.dataValues)\n      res\n        .cookie('_token_v1', token)\n        .redirect(samlConfig.finalUrl)\n    })\nrouter.route('/auth/login/callback')\n  .post(\n    passport.authenticate('saml', { failureRedirect: '/auth/login/fail' }),\n    (req, res) => {\n      const token = signToken(req.user.dataValues)\n      res\n        .cookie('_token_v1', token)\n        .redirect(samlConfig.finalUrl)\n    })\nrouter.route('/auth/login/fail')\n  .get((req, res) => {\n    res.status(401).send('Login failed')\n  })\nrouter.route('/Shibboleth.sso/Metadata')\n  .get((req, res) => {\n    res.type('application/xml')\n    res.status(200).send(samlStrategy.generateServiceProviderMetadata(samlConfig.publicCert))\n  })"}