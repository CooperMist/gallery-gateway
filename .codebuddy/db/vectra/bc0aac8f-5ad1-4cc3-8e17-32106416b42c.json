{"chunk":20,"numChunks":26,"fileHash":"1Flx/2T3wFjL/sSgt8GQYvuj3jYynpCkxmSTTNthx4E=","filePath":"frontend/src/Student/components/SubmissionForm.js","content":"import React, { Component, Fragment } from 'react'\nclass SubmissionForm extends Component {\n  render() {\n    return (\n      <FormGroup>\n        <Fragment>\n          <Formik\n            {({\n            }) => {\n              return (\n                <Form onSubmit={handleSubmit} style={{ marginBottom: '75px' }}>\n                  <Row>\n                    <Col xs='12' md='8' style={{ margin: '0 auto' }}>\n                      <Header>New {this.props.type} Submission</Header>\n                      <SubHeader>{this.props.forShow.name}</SubHeader>\n                      <FormGroup>\n                        <Label>Academic Program</Label>\n                        <Field\n                          type='text'\n                          id='academicProgram'\n                          name='academicProgram'\n                          className='form-control'\n                          required\n                        />\n                        {this.renderErrors(touched, errors, 'academicProgram')}\n                      </FormGroup>\n                      <FormGroup>\n                        <Label>Year Level</Label>\n                        <Field\n                          type='text'\n                          id='yearLevel'\n                          name='yearLevel'\n                          className='form-control'\n                          required\n                        />\n                        {this.renderErrors(touched, errors, 'yearLevel')}\n                      </FormGroup>\n                      <SubmitAsGroupRadio\n                        values={values}\n                        touched={touched}\n                        errors={errors}\n                        canSubmitAsSingle={this.props.canSubmitAsSingle}\n                        renderErrors={this.renderErrors}\n                      />\n                      {values.submittingAsGroup === 'yes' ? (\n                        <FormGroup>\n                          <Label>List the names of your other group members.</Label>\n                          <Field\n                            type='text'\n                            id='groupParticipants'\n                            name='groupParticipants'\n                            className='form-control'\n                            required\n                          />\n                          {this.renderErrors(touched, errors, 'groupParticipants')}\n                        </FormGroup>\n                      ) : null}"}