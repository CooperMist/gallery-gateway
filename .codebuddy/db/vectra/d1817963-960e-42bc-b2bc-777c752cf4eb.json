{"chunk":2,"numChunks":9,"fileHash":"WzsIQf7HVyXEB3pIQVcaK1HwzGYq9QlcAPxMzbOV0mQ=","filePath":"frontend/src/Admin/components/AssignJudgesTable.js","content":"import React, { Component, Fragment } from 'react'\nclass AssignJudgesTable extends Component {\n  static propTypes = {\n    showId: PropTypes.string.isRequired,\n    fetchData: PropTypes.func.isRequired,\n    data: PropTypes.shape({\n      unassignedJudges: PropTypes.array.isRequired,\n      assignedJudges: PropTypes.array.isRequired\n    }),\n    assign: PropTypes.func.isRequired,\n    unassign: PropTypes.func.isRequired,\n    handleError: PropTypes.func.isRequired,\n    afterAssign: PropTypes.func.isRequired,\n    afterUnassign: PropTypes.func.isRequired\n  }\n  static defaultProps = {\n    data: {\n      assignedJudges: [],\n      unassignedJudges: []\n    }\n  }\n  state = {\n    selectedUnassignedJudges: {},\n    selectedAssignedJudges: {},\n    isUnassignConfirmationOpen: false\n  }\n  componentDidMount () {\n    this.props.fetchData()\n  }\n  onDismissUnassignConfirmation = () => {\n    this.setState({\n      isUnassignConfirmationOpen: false\n    })\n  }\n  onDisplayUnassignConfirmation = () => {\n    this.setState({\n      isUnassignConfirmationOpen: true\n    })\n  }\n  assign = () => {\n    const judges = Object.keys(this.state.selectedUnassignedJudges)\n\n    if (judges.length) {\n      this.props\n        .assign(judges)\n        .then(() => {\n          this.props.afterAssign(judges)\n          // Reset the checkboxes\n          this.setState({\n            selectedUnassignedJudges: {},\n            selectedAssignedJudges: {}\n          })\n        })\n        .catch(err => this.props.handleError(err.message))\n    }\n  }"}