{"chunk":0,"numChunks":1,"fileHash":"DuMRZUWkVSKEBwY0kvU68BQ4vtUBUmjzrBq/HyLcDOM=","filePath":"backend/models/image.js","content":"import Entry from './entry'\r\nimport { IMAGE_ENTRY } from '../constants'\r\nimport DataTypes from 'sequelize'\r\nimport sequelize from '../config/sequelize'\r\n\r\nconst Image = sequelize.define('image', {\r\n  path: {\r\n    type: DataTypes.STRING,\r\n    allowNull: false,\r\n    notEmpty: true\r\n  },\r\n  horizDimInch: {\r\n    type: DataTypes.FLOAT,\r\n    allowNull: false\r\n  },\r\n  vertDimInch: {\r\n    type: DataTypes.FLOAT,\r\n    allowNull: false\r\n  },\r\n  mediaType: {\r\n    type: DataTypes.STRING,\r\n    allowNull: false,\r\n    notEmpty: true\r\n  },\r\n  createdAt: {\r\n    allowNull: false,\r\n    type: DataTypes.DATE\r\n  },\r\n  updatedAt: {\r\n    allowNull: false,\r\n    type: DataTypes.DATE\r\n  }\r\n},\r\n{\r\n  validate: {\r\n    dimensionsPositiveValidation () {\r\n      if (this.vertDimInch <= 0) {\r\n        throw new Error('vertDimInch must be positive')\r\n      }\r\n      if (this.horizDimInch <= 0) {\r\n        throw new Error('horizDimInch must be positive')\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nImage.prototype.getEntry = function getEntry () {\r\n  return Entry.findOne({where: {entryType: IMAGE_ENTRY, entryId: this.id}})\r\n}\r\n\r\nexport default Image\r\n"}