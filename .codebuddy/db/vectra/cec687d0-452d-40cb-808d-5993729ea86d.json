{"chunk":0,"numChunks":1,"fileHash":"/o/gKVy50NafpIqjF1hcC/SR5v/W9s/wCJWT7909TA0=","filePath":"backend/resolvers/queries/userQuery.js","content":"import User from '../../models/user'\r\nimport { UserError } from 'graphql-errors'\r\nimport { STUDENT, ADMIN, JUDGE } from '../../constants'\r\n\r\nexport function user (_, args, context) {\r\n  const isRequestingOwnUser = context.username !== undefined && context.username === args.id\r\n  if (context.authType !== ADMIN && !isRequestingOwnUser) {\r\n    throw new UserError('Permission Denied')\r\n  }\r\n  return User.findByPk(args.id)\r\n}\r\n\r\nexport function self (_, __, context) {\r\n  if (!context.username) {\r\n    throw new UserError('Permission Denied')\r\n  }\r\n  return User.findByPk(context.username)\r\n}\r\n\r\nexport function users (_, args, context) {\r\n  if (context.authType !== ADMIN) {\r\n    throw new UserError('Permission Denied')\r\n  }\r\n  if (args.type === STUDENT) {\r\n    return User.findAll({\r\n      where: {\r\n        type: STUDENT\r\n      }\r\n    })\r\n  } else if (args.type === JUDGE) {\r\n    return User.findAll({\r\n      where: {\r\n        type: JUDGE\r\n      }\r\n    })\r\n  } else if (args.type === ADMIN) {\r\n    return User.findAll({\r\n      where: {\r\n        type: ADMIN\r\n      }\r\n    })\r\n  } else {\r\n    return User.findAll()\r\n  }\r\n}\r\n"}