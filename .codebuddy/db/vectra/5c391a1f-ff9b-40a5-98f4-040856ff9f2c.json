{"chunk":16,"numChunks":20,"fileHash":"1RqJBYZ3ZoWKyYAMi1bUM9TATlzvqyN0gPpCdhJq+7Y=","filePath":"backend/test/resolvers/user.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('User Resolvers', function () {\n  describe('Update User Resolver', function(){\n    it('Does now allow non-admins to update users', function () {\n      expect(() =>\n        updateUser('', {}, {auth: {type: 'STUDENT', username: 'billy'}})\n      ).to.throw(/Permission Denied/)\n      expect(() =>\n        updateUser('', {}, {auth: {type: 'JUDGE', username: 'bob'}})\n      ).to.throw(/Permission Denied/)\n    })\n    it('Does now allow a non-existent user to be updated', function (done) {\n      const input = {input: {\n        username: 'nobody',\n        firstName: 'nowhere',\n        lastName: 'man',\n        hometown: 'nowhere land'\n      }}\n      updateUser('', input, {auth: {type: 'ADMIN'}})\n        .catch((err) => {\n          expect(err).to.exist\n          expect(err.message).to.equal('User Does Not Exist')\n          done()\n        })\n    })\n    it('Does now allow null username', function (done) {\n      const input = {input: {\n        firstName: 'nowhere',\n        lastName: 'man',\n        hometown: 'nowhere land'\n      }}\n      updateUser('', input, {auth: {type: 'ADMIN'}})\n        .catch((err) => {\n          expect(err).to.exist\n          expect(err.message).to.equal('User Does Not Exist')\n          done()\n        })\n    })"}