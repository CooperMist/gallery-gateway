{"chunk":0,"numChunks":1,"fileHash":"SYol0sZHZEexHAz3rTgWON6iqnA4N9m5uj7bfR4ty74=","filePath":"frontend/src/Judge/containers/PortfolioRatingPanel.js","content":"import { graphql } from 'react-apollo'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'recompose'\r\n\r\nimport { fetchPortfolioRating } from '../actions'\r\nimport { displayError } from '../../shared/actions'\r\nimport PortfolioRatingPanel from '../components/PortfolioRatingPanel'\r\nimport SendPortfolioRating from '../mutations/sendPortfolioRating.graphql'\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.shared.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchPortfolioRating: portfolioId => dispatch(fetchPortfolioRating(portfolioId)),\r\n  handleError: message => dispatch(displayError(message))\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  graphql(SendPortfolioRating, {\r\n    props: ({ mutate, ownProps }) => ({\r\n      makePortfolioRating: rating =>\r\n        mutate({\r\n          variables: {\r\n            input: {\r\n              portfolioPeriodId: parseInt(ownProps.portfolio.portfolioPeriodId),\r\n              portfolioId: parseInt(ownProps.portfolio.id),\r\n              rating,\r\n              judgeUsername: ownProps.user.username\r\n            }\r\n          }\r\n        }).then(() => ownProps.fetchPortfolioRating(ownProps.portfolio.id))\r\n    })\r\n  })\r\n)(PortfolioRatingPanel)\r\n"}