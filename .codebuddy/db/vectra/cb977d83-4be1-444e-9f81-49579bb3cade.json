{"chunk":2,"numChunks":25,"fileHash":"IheIbb4hwNnJersVA+Z5HKTq+Up0UDJLLklzMNvgrOU=","filePath":"backend/db/seeds/20180415220000-seed-demo.js","content":"import https from 'https'\nexport const download = (url, destGuid, extn) => {\n  // http downloading adapted from https://stackoverflow.com/q/11944932\n  const dstDir = `${extn === 'jpg' ? imageUploadDir : pdfUploadDir}/${destGuid[0]}/${destGuid[1]}`\n  const dst = `${dstDir}/${destGuid}.${extn}`\n  return new Promise((resolve, reject) => {\n    mkdirp(\n      dstDir).then(\n      (err) => {\n        if (err) {\n          reject(err)\n          return\n        }\n        const fpipe = fs.createWriteStream(dst)\n        https.get(url, (response) => {\n          console.log('status', response.statusCode)\n          if (response.statusCode === 500) {\n            return setTimeout(\n              () => resolve(download(url, destGuid, extn)),\n              1000\n            )\n          }\n          response.pipe(fpipe)\n          fpipe.on('finish', () => {\n            fpipe.close((err) => {\n              if (err) {\n                reject(err)\n              } else if (extn === 'jpg') {\n                // Remember to gen thumbs\n                resolve(genThumbnail(dst))\n              } else {\n                resolve()\n              }\n            })\n          })\n        }).on('error', (err) => {\n          fs.unlink(dst, () => reject(err))\n        }).end()\n      }\n    )\n  }).then(() => {\n    console.log(`Downloaded ${url}`)\n  })\n}"}