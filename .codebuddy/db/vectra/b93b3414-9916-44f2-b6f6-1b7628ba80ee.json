{"chunk":0,"numChunks":7,"fileHash":"VKjoLJ98P7cs0hkUwF13Fs4mH989p0OTc5PDaJYBlZI=","filePath":"frontend/src/Judge/reducers.js","content":"import { combineReducers } from 'redux'\nimport { repeatableShuffle } from '../utils'\nimport * as actions from './actions'\n// Example State:\n// {\n//   1: {id: '1', title...},\n//   2: {id: '2', title...}\n// }\nconst submissions = (state = {}, action) => {\n  switch (action.type) {\n    case actions.FETCH_SUBMISSION:\n      if (!action.payload.id) {\n        return state\n      }\n\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          ...action.payload\n        }\n      }\n    case actions.FETCH_SUBMISSIONS:\n      if (!action.payload.submissions.length) {\n        return state\n      }\n\n      const submissionsById = action.payload.submissions.reduce(\n        (accum, submission) => {\n          accum[submission.id] = submission\n          return accum\n        },\n        {}\n      )\n      return {\n        ...state,\n        ...submissionsById\n      }\n    default:\n      return state\n  }\n}\nconst initialQueueState = {\n  order: [], // Array of entry id's\n  loadingSubmissions: false,\n  loadingVotes: false\n}"}