{"chunk":6,"numChunks":9,"fileHash":"YOuAqeDV8U74YnQ9wIMRlEJcJQERugrUkolbfgwnXMM=","filePath":"backend/test/routes/zipDownload.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('downloading a zip file', () => {\n  it('downloads a single group-submitted image', (done) => {\n    fakeUser({\n      username: 'jxs9324',\n      firstName: 'John',\n      lastName: 'Smith'\n    })\n      .then(user => Promise.all([fakeShow({name: 'Honors Show'}), fakeGroup({user})])\n        .then(([show, group]) => [show, group, user]))\n      .then(([show, group, user]) =>\n        fakeImageEntry({invited: true, path: 'imageB.jpg', group, show, user})\n          .then(entry =>{\n            var files = []\n              request(server)\n                .get(`/zips/${entry.showId}?token=${token}`)\n                .buffer().pipe(tar.t()).on('entry', entry => {\n                    files.push(entry.path)\n                })\n                setTimeout(()=>{\n                  expect(files.length).to.eq(1, 'Files Present: ' + files.length + '\\nshould have one file')\n                  expect(files).to.include(`${show.name}/Invited/${user.lastName}, ${user.firstName} & ${group.participants} - ${entry.title}.jpg`\n                  , 'Files Present: ' + files + `\\nshould contain file:\\n ${show.name}/Invited/${user.lastName}, ${user.firstName} & ${group.participants} - ${entry.title}.jpg\\n`)\n                  done()\n                }, 500)\n              })\n          )\n            })"}