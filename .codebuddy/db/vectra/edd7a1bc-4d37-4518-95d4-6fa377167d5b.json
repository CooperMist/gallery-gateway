{"chunk":5,"numChunks":7,"fileHash":"JAcHJ7uYdyYYvjMQnFvzLMb8cABig7cIJWTRSgzT9OE=","filePath":"frontend/src/Judge/reducers.js","content":"import { combineReducers } from 'redux'\nconst ratings = (state = initialRatingState, action) => {\n  switch (action.type) {\n    case actions.FETCH_PORTFOLIO_RATINGS:\n      if (action.payload.ratings == null || !action.payload.ratings.length) {\n        console.log(\"Rating Payload = \" + action.payload.ratings)\n        return state\n      }\n\n      const ratingsById = action.payload.ratings.reduce((accum, rating) => {\n        accum[rating.id] = rating\n        return accum\n      }, {})\n      const ratingsByPortfolioId = action.payload.ratings.reduce((accum, rating) => {\n        accum[rating.portfolio.id] = rating\n        return accum\n      }, {})\n\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          ...ratingsById\n        },\n        byPortfolioId: {\n          ...state.byPortfolioId,\n          ...ratingsByPortfolioId\n        }\n      }\n    case actions.FETCH_PORTFOLIO_RATING:\n      if (!action.payload.id) {\n        return state\n      }\n\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [action.payload.id]: action.payload\n        },\n        byPortfolioId: {\n          ...state.byPortfolioId,\n          [action.payload.portfolio.id]: action.payload\n        }\n      }\n    default:\n      return state\n  }\n}\nconst initialRatingQueueState = {\n  order: [], // Array of entry id's\n  loadingPortfolios: false,\n  loadingRatings: false\n}"}