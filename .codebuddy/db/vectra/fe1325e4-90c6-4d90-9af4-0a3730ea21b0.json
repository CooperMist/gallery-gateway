{"chunk":2,"numChunks":3,"fileHash":"pnmzYVtQERHgurXDNl15MU+kRdJsI1Oq2bdlmcLDUM0=","filePath":"frontend/src/Judge/actions.js","content":"import { push } from 'connected-react-router'\nexport const setViewing = (showId, entryId) => (dispatch, getState, client) => {\n  dispatch(push(`/show/${showId}/vote?on=${entryId}`))\n}\nexport const fetchPortfolio = portfolioId => (dispatch, getState, client) => {\n  return client\n  console.log(\"Fetch Portfolio Action\")\n    .query({\n      query: PortfolioQuery,\n      variables: {\n        id: portfolioId\n      }\n    })\n    .then(({ data: { portfolio } }) =>\n      dispatch({ type: FETCH_PORTFOLIO, payload: portfolio })\n    )\n    .catch(err => dispatch(displayError(err.message)))\n}\nexport const fetchPortfolios = portfolioPeriodId => (dispatch, getState, client) => {\n  const { shared: { auth: { user: { username } } } } = getState()\n  dispatch({ type: WILL_FETCH_PORTFOLIOS, payload: portfolioPeriodId })\n  return client\n    .query({\n      query: PortfoliosQuery,\n      variables: {\n        id: portfolioPeriodId\n      }\n    })\n    .then(({ data: { portfolios } }) =>\n      dispatch({\n        type: FETCH_PORTFOLIOS,\n        payload: {\n          portfolios: portfolios.filter(s => !s.excludeFromJudging),\n          username\n        }\n      })\n    )\n    .catch(err => dispatch(displayError(err.message)))\n}"}