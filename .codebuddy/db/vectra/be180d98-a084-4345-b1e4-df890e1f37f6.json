{"chunk":12,"numChunks":38,"fileHash":"0HdfV29crxybzCYcCSJEw6NdslXesS3O1aP5Kzlwt2A=","filePath":"backend/test/resolvers/entry.js","content":"import { expect } from 'chai'\ndescribe('Entry Mutations', function () {\n  describe('Image Creation', function () {\n    describe('Successes', function () {\n      it('accepts a standard Entry', function () {\n        return Promise.all([fakeUser(), fakeShow()])\n          .then((models) => {\n            const user = models[0]\n            const show = models[1]\n            const args = {\n              input: {\n                entry: standardEntry(user, show),\n                path: 'a/path.jpg',\n                horizDimInch: 1.2,\n                vertDimInch: 1.3,\n                mediaType: 'mymedia'\n              }\n            }\n            return createPhoto({}, args, { auth: { type: 'ADMIN' } })\n              .then(() => {\n                // make sure an Entry was created\n                return Entry.count().then((num) => expect(num).to.equal(1))\n              })\n          })\n      })\n      it('accepts a standard Entry with only the schema required input', function () {\n        return Promise.all([fakeUser(), fakeShow()])\n          .then((models) => {\n            const user = models[0]\n            const show = models[1]\n            const args = {\n              input: {\n                entry: {\n                  studentUsername: user.username,\n                  showId: show.id\n                },\n                path: 'a/path.jpg',\n                horizDimInch: 1.2,\n                vertDimInch: 1.3,\n                mediaType: 'mymedia'\n              }\n            }\n            return createPhoto({}, args, { auth: { type: 'ADMIN' } })\n              .then(show => show.getEntries())\n              .then(([entry]) => entry)\n              .then((entry) => {\n                expect(entry.title).to.equal('Untitled')\n                expect(entry.moreCopies).to.equal(false)\n                // make sure an Entry was created"}