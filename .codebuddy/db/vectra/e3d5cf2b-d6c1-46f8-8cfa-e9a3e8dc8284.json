{"chunk":2,"numChunks":3,"fileHash":"dMUQjntUaWksWmrbzgaLdarxSCpAAKjmwk2B6JMjghM=","filePath":"frontend/src/Student/components/OtherMediaSubmissionForm.js","content":"import React, { Component } from 'react'\nclass OtherSubmissionForm extends Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      username: PropTypes.string,\n      hometown: PropTypes.string,\n      displayName: PropTypes.string\n    }).isRequired,\n    data: PropTypes.shape({\n      show: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        entries: PropTypes.arrayOf(\n          PropTypes.shape({\n            id: PropTypes.string,\n            student: PropTypes.shape({\n              username: PropTypes.string\n            })\n          })\n        )\n      })\n    }).isRequired,\n    handleImageUpload: PropTypes.func.isRequired,\n    handlePDFUpload: PropTypes.func.isRequired,\n    previewFile: PropTypes.object.isRequired,\n    create: PropTypes.func.isRequired,\n    done: PropTypes.func.isRequired,\n    handleError: PropTypes.func.isRequired,\n    clearPreview: PropTypes.func.isRequired\n  }\n  static defaultProps = {\n    previewFile: {}\n  }\n  constructor (props) {\n    super(props)\n    this.state = { showModal: false }\n    // Clear any uploaded files for the next time a user views the form.\n    props.clearPreview()\n    this.renderForm = this.renderForm.bind(this)\n  }\n  componentDidUpdate () {\n    if (this.props.data.error) {\n      this.props.data.error.graphQLErrors.forEach(e => {\n        this.props.handleError(e.message)\n      })\n    }\n  }"}