{"chunk":0,"numChunks":1,"fileHash":"8C1qrXujV0Iw66ftPIUhfnNdcXVlvkXh72oXiHo6AcU=","filePath":"backend/test/util.js","content":"\r\nimport jwt from 'jsonwebtoken'\r\nimport { graphql } from 'graphql'\r\n\r\nimport nconf from '../config'\r\nimport schema from '../schema'\r\n\r\nfunction sign (payload) {\r\n  return jwt.sign(\r\n    payload,\r\n    nconf.get('auth:jwt:secret'),\r\n    { algorithm: 'RS256' }\r\n  )\r\n}\r\n\r\n/**\r\n * Generates and signs a token for the given user\r\n * @param {User} user\r\n * @return {string} the token\r\n */\r\nexport function signUserToken (user) {\r\n  return sign(user.dataValues)\r\n}\r\n\r\n/**\r\n * Decodes a token and returns it\r\n * @param {string} token the jwt token\r\n * @return {object} decoded token\r\n */\r\nexport function decodeUserToken (token) {\r\n  var decoded = {}\r\n  jwt.verify(\r\n    token,\r\n    nconf.get('auth:jwt:pub'),\r\n    { algorithm: 'RS256' },\r\n    (err, decoded_) => {\r\n      if (!err) {\r\n        decoded = decoded_\r\n      }\r\n    })\r\n  return decoded\r\n}\r\n\r\nexport function execGraphql (query, auth) {\r\n  return graphql(schema, query, null, {auth})\r\n}\r\n"}