{"chunk":0,"numChunks":1,"fileHash":"rei7IF3CpsYOOo0X/cS8BqnOc2xFR10s6Zp9Cf4NmR4=","filePath":"frontend/src/shared/components/LoginSwitch.js","content":"import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { compose } from 'recompose'\nimport { shouldLogin, login } from '../actions'\nimport HomePage from '../../Home/Page'\nimport AdminPage from '../../Admin/Page'\nimport JudgePage from '../../Judge/Page'\nimport StudentPage from '../../Student/Page'\n// Displays the splash page when logged out, otherwise\n// loads the correct app component for this user.\nclass LoginSwitch extends Component {\n  static propTypes = {\n    user: PropTypes.object.isRequired,\n    performingRole: PropTypes.string.isRequired,\n    shouldLogin: PropTypes.func.isRequired,\n    login: PropTypes.func.isRequired\n  }\n\n  static defaultProps = {\n    user: {},\n    performingRole: 'ADMIN'\n  }\n\n  componentDidMount () {\n    if (this.props.shouldLogin()) {\n      this.props.login()\n    }\n  }\n\n  render () {\n    const { user, performingRole } = this.props\n\n    if (!user.type) {\n      return <HomePage />\n    }\n\n    switch (user.type) {\n      case 'ADMIN':\n        if (performingRole === 'JUDGE') {\n          return <JudgePage />\n        } else {\n          return <AdminPage />\n        }\n      case 'JUDGE':\n        return <JudgePage />\n      case 'STUDENT':\n        return <StudentPage />\n      default:\n        // If for some reason, we receive an unknown user type, throw an error,\n        // so that the error boundary can catch it and render the error page\n        throw new Error('Unknown User Type')\n    }\n  }\n}\nconst mapStateToProps = state => ({\n  user: state.shared.auth.user,\n  performingRole: state.shared.auth.performingRole\n})\nconst mapDispatchToProps = dispatch => ({\n  shouldLogin,\n  login: () => dispatch(login())\n})"}