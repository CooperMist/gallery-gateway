{"chunk":0,"numChunks":1,"fileHash":"kjhz/vYUApNnSCS3bQ+hfowRsjYEs9mNbHrisBmB92k=","filePath":"frontend/src/shared/components/SelectInput.js","content":"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Creatable } from 'react-select'\r\n\r\nimport 'react-select/dist/react-select.css'\r\n\r\n// See: https://github.com/jaredpalmer/formik#why-use-setfieldvalue-instead-of-handlechange\r\nclass SelectInput extends Component {\r\n  static propTypes = {\r\n    field: PropTypes.string.isRequired,\r\n    input: PropTypes.shape({\r\n      value: PropTypes.oneOfType([\r\n        PropTypes.shape({\r\n          value: PropTypes.string,\r\n          label: PropTypes.string\r\n        }),\r\n        PropTypes.arrayOf(\r\n          // If 'multi' select\r\n          PropTypes.shape({\r\n            value: PropTypes.string,\r\n            label: PropTypes.string\r\n          })\r\n        ),\r\n        PropTypes.string // '' when empty\r\n      ]),\r\n      onChange: PropTypes.func.isRequired, // setFieldValue\r\n      onBlur: PropTypes.func.isRequired // setFieldTouched\r\n    }).isRequired,\r\n    options: PropTypes.array.isRequired\r\n  }\r\n\r\n  handleChange = value => {\r\n    this.props.input.onChange(this.props.field, value.value)\r\n  }\r\n\r\n  handleBlur = () => {\r\n    this.props.input.onBlur(this.props.field, true)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Creatable\r\n        {...this.props}\r\n        options={this.props.options}\r\n        onChange={this.handleChange}\r\n        onBlur={this.handleBlur}\r\n        value={this.props.input.value}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default SelectInput\r\n"}