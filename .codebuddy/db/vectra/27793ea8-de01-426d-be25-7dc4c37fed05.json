{"chunk":0,"numChunks":4,"fileHash":"tPC4VQI7mjlkoId3xNkTzOP8GloFfh+z6F/ayCmYL5Q=","filePath":"backend/routes/upload.js","content":"import multer from 'multer'\nimport mkdirp from 'mkdirp'\nimport {v4 as uuidv4} from 'uuid'\nimport sharp from 'sharp'\nimport path from 'path'\nimport nconf from '../config'\nimport { Router } from 'express'\nimport { ADMIN, STUDENT } from '../constants'\nconst router = Router()\nconst imageDir = nconf.get('upload:imageDir')\nconst pdfDir = nconf.get('upload:pdfDir')\n// Enums, for designating what file type we are processing\nconst JPEG = 'JPEG'\nconst PDF = 'PDF'\nfunction storage (dir, extn) {\n  return multer.diskStorage({\n    destination: (req, file, callback) => {\n      callback(null, dir)\n    },\n    filename: (req, file, callback) => {\n      // Generate a unique id for the file\n      const filename = uuidv4()\n      // Make sure the correct directories exist or are created\n      mkdirp.sync(`${dir}/${filename[0]}/${filename[1]}`)\n      // Return the path for the file\n      callback(null, `${filename[0]}/${filename[1]}/${filename}.${extn}`)\n    }\n  })\n}\nconst imageUpload = multer({\n  storage: storage(imageDir, 'jpg'),\n  limits: { fileSize: 50000000, files: 1 }, // Max 50 MB\n  fileFilter: imageTypeFilter\n}).single('image') // Form field key needs to be 'image' w/ image data as the value\nconst pdfUpload = multer({\n  storage: storage(pdfDir, 'pdf'),\n  limits: { fileSize: 50000000, files: 1 }, // Max 50 MB\n  fileFilter: pdfTypeFilter\n}).single('pdf') // Form field key needs to be 'pdf' w/ pdf data as the value"}