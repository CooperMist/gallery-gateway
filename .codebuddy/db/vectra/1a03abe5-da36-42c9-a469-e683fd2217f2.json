{"chunk":0,"numChunks":1,"fileHash":"6HMvYk0jf9Vo/DdFQwfFMVF6zKuAeuhp88nvPvnevDk=","filePath":"frontend/src/Student/components/SubmitAsGroupRadio.js","content":"import React from 'react'\r\nimport { Label, FormGroup, UncontrolledTooltip } from 'reactstrap'\r\nimport { Field } from 'formik'\r\nimport FontAwesomeIcon from '@fortawesome/react-fontawesome'\r\nimport FaQuestionCircle from '@fortawesome/fontawesome-free-solid/faQuestionCircle'\r\n\r\nexport default function SubmitAsGroupRadio ({\r\n  values,\r\n  touched,\r\n  errors,\r\n  canSubmitAsSingle,\r\n  renderErrors\r\n}) {\r\n  return (\r\n    <FormGroup>\r\n      <Label>Is this a group submission?</Label>\r\n      <FormGroup check>\r\n        <Label check>\r\n          <Field\r\n            type='radio'\r\n            id='submittingAsGroup'\r\n            name='submittingAsGroup'\r\n            value='no'\r\n            required\r\n            disabled={!canSubmitAsSingle}\r\n            checked={values.submittingAsGroup === 'no'}\r\n          />\r\n          {canSubmitAsSingle ? (\r\n            <span className='ml-2'>No</span>\r\n          ) : (\r\n            <span className='ml-2 text-muted'>\r\n              No&nbsp;\r\n              <FontAwesomeIcon\r\n                icon={FaQuestionCircle}\r\n                className='align-middle'\r\n                id='noSingleHelp'\r\n              />\r\n              <UncontrolledTooltip target='noSingleHelp'>\r\n                <p className='text-left'>\r\n                  You have reached your individual submission limit for this\r\n                  show. Additional submissions must be done as a group.\r\n                </p>\r\n              </UncontrolledTooltip>\r\n            </span>\r\n          )}\r\n        </Label>\r\n      </FormGroup>\r\n      <FormGroup check>\r\n        <Label check>\r\n          <Field\r\n            type='radio'\r\n            id='submittingAsGroup'\r\n            name='submittingAsGroup'\r\n            value='yes'\r\n            required\r\n            checked={values.submittingAsGroup === 'yes'}\r\n          />\r\n          <span className='ml-2'>Yes</span>\r\n        </Label>\r\n      </FormGroup>\r\n      {renderErrors(touched, errors, 'submittingAsGroup')}\r\n    </FormGroup>\r\n  )\r\n}\r\n"}