{"chunk":0,"numChunks":1,"fileHash":"3lqoBYyNPPV5xaZyLtOE9HbxyxoS16xlwkyijLc9+OY=","filePath":"frontend/src/Admin/containers/AssignJudgesTable.js","content":"import { graphql } from 'react-apollo'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport {\n  fetchJudgesByAssignmentForShow,\n  assignJudgesToShow,\n  removeJudgesFromShow\n} from '../actions'\nimport { displayError } from '../../shared/actions'\nimport JudgesQuery from '../queries/judges.graphql'\nimport JudgesForShowQuery from '../queries/judgesForShow.graphql'\nimport AssignToShowMutation from '../mutations/assignToShow.graphql'\nimport RemoveFromShowMutation from '../mutations/removeFromShow.graphql'\nimport AssignJudgesTable from '../components/AssignJudgesTable'\nconst filterUnassignedJudges = (judges, assignments = []) => {\n  return Object.values(judges).filter(\n    judge => !assignments.includes(judge.username)\n  )\n}\nconst mapAssignmentsToJudges = (judges, assignments = []) => {\n  return assignments.map(key => judges[key])\n}\nconst mapStateToProps = (state, ownProps) => {\n  const judges = state.admin.judges\n  const assignments = state.admin.assignments[ownProps.showId]\n  return {\n    data: {\n      unassignedJudges: filterUnassignedJudges(judges, assignments),\n      assignedJudges: mapAssignmentsToJudges(judges, assignments)\n    }\n  }\n}\nconst mapDispatchToProps = (dispatch, { showId }) => ({\n  fetchData: () => dispatch(fetchJudgesByAssignmentForShow(showId)),\n  afterAssign: usernames => dispatch(assignJudgesToShow(showId, usernames)),\n  afterUnassign: usernames => dispatch(removeJudgesFromShow(showId, usernames)),\n  handleError: message => dispatch(displayError(message))\n})"}