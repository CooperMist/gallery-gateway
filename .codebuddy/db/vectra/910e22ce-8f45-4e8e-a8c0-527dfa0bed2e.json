{"chunk":6,"numChunks":7,"fileHash":"bnRKSnTPq82LOVThmaRm+v4bJ6QwWgm+QnGjumEq9IM=","filePath":"backend/models/entry.js","content":"import Image from './image'\n/*\n* Calculate the score on the entry\n*/\nEntry.prototype.getScore = function getScore () {\n  // Calculate score by getting all votes with this\n  // entry id and then averaging over the sum of the votes\n  return Vote.findAll({ where: { entryId: this.id } })\n    .then((votes) => {\n      const votesValues = votes.map(vote => vote.value)\n      if (votesValues.length === 0) {\n        return 0\n      }\n      return votesValues.reduce((acc, curr) => acc + curr) / votesValues.length\n    })\n}\n/*\n * Gets the associated photo as a Promise\n */\nEntry.prototype.getImage = function getImage () {\n  if (this.entryType !== IMAGE_ENTRY) {\n    return Promise.resolve(null)\n  }\n  return this.imagePromise ? this.imagePromise\n    : (this.imagePromise = Image.findOne({ where: { id: this.entryId } }))\n}\nEntry.prototype.getVideo = function getVideo () {\n  if (this.entryType !== VIDEO_ENTRY) {\n    return Promise.resolve(null)\n  }\n  return this.videoPromise ? this.videoPromise\n    : (this.videoPromise = Video.findOne({ where: { id: this.entryId } }))\n}\nEntry.prototype.getOther = function getOther () {\n  if (this.entryType !== OTHER_ENTRY) {\n    return Promise.resolve(null)\n  }\n  return this.otherPromise ? this.otherPromise\n    : (this.otherPromise = Other.findOne({ where: { id: this.entryId } }))\n}"}