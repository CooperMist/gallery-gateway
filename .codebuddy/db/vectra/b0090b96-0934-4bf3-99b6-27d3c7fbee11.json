{"chunk":0,"numChunks":19,"fileHash":"R3AhPGkTG76iaT0CuSXaqvdmSzdiLm7UvsgibdjZdX4=","filePath":"backend/resolvers/mutations/show.js","content":"import { promisify } from 'util'\nimport fs from 'fs'\nimport path from 'path'\nimport config from '../../config'\nimport db from '../../config/sequelize'\nimport Show from '../../models/show'\nimport Vote from '../../models/vote'\nimport Entry from '../../models/entry'\nimport Image from '../../models/image'\nimport Video from '../../models/video'\nimport Other from '../../models/other'\nimport { UserError } from 'graphql-errors'\nimport moment from 'moment-timezone'\nimport { ADMIN, IMAGE_ENTRY, OTHER_ENTRY, VIDEO_ENTRY } from '../../constants'\nconst imageDir = config.get('upload:imageDir')\nconst pdfDir = config.get('upload:pdfDir')\nconst unlink = promisify(fs.unlink)\nexport function createShow (_, args, context) {\n  if (context.authType !== ADMIN) {\n    throw new UserError('Permission Denied')\n  }\n  // Handle timezones, start times to midnight and end times to 11:59:59\n  const entryStart = moment(args.input.entryStart).tz('America/New_York').startOf('day')\n  const entryEnd = moment(args.input.entryEnd).tz('America/New_York').endOf('day')\n  const judgingStart = moment(args.input.judgingStart).tz('America/New_York').startOf('day')\n  const judgingEnd = moment(args.input.judgingEnd).tz('America/New_York').endOf('day')\n  const newShow = {\n    name: args.input.name,\n    description: args.input.description,\n    entryStart: entryStart,\n    entryEnd: entryEnd,\n    judgingStart: judgingStart,\n    judgingEnd: judgingEnd,\n    entryCap: args.input.entryCap\n  }\n  return Show.create(newShow)\n}"}