{"chunk":0,"numChunks":1,"fileHash":"/XRpr4Qy+u4D8Ya6hQVMs8dx2OlzEHbKdECDrk0Dx/k=","filePath":"backend/resolvers/queries/ratingQuery.js","content":"import Rating from '../../models/rating'\r\nimport Portfolio from '../../models/portfolio'\r\n\r\nimport { UserError } from 'graphql-errors'\r\nimport { ADMIN, JUDGE } from '../../constants'\r\n\r\nexport function ratings (_, args, context) {\r\n  const isRequestingOwnJudgeUser = context.username !== undefined &&\r\n    context.authType === JUDGE && context.username === args.judgeUsername\r\n  if (context.authType !== ADMIN && !isRequestingOwnJudgeUser) {\r\n    throw new UserError('Permission Denied')\r\n  }\r\n  //return all ratings for a given portfolio\r\n    return Rating.findAll({\r\n    where: { portfolioId: args.portfolioId }\r\n  })\r\n}\r\n\r\nexport function rating (_, args, context) {\r\n  const isRequestingOwnJudgeUser = context.username !== undefined &&\r\n    context.authType === JUDGE && context.username === args.judgeUsername\r\n  if (context.authType !== ADMIN && !isRequestingOwnJudgeUser) {\r\n    throw new UserError('Permission Denied')\r\n  }\r\n  return Rating.findOne({\r\n    where: {\r\n      judgeUsername: args.judgeUsername,\r\n      portfolioId: args.portfolioId\r\n    }\r\n  })\r\n}\r\n\r\n"}