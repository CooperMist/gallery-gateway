{"chunk":7,"numChunks":9,"fileHash":"YOuAqeDV8U74YnQ9wIMRlEJcJQERugrUkolbfgwnXMM=","filePath":"backend/test/routes/zipDownload.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('downloading a zip file', () => {\n  it('disambiguates untitled submissions', (done) => {\n    Promise.all([fakeShow({name: 'Honors Show'}), fakeUser()])\n      .then(([show, user]) =>\n        Promise.all([\n          fakeImageEntry({title: 'Untitled', path: 'imageA.jpg', invited: true, user, show}),\n          fakeImageEntry({title: 'Untitled', path: 'imageB.jpg', invited: true, user, show})\n        ]).then(([entry1, entry2]) => {\n          var files = []\n            request(server)\n              .get(`/zips/${entry1.showId}?token=${token}`)\n              .buffer().pipe(tar.t()).on('entry', entry => {\n                  files.push(entry.path)\n              })\n              setTimeout(()=>{\n              expect(files.length).to.eq(2, 'Files Present: ' + files.length + '\\nshould have two files')\n              expect(files).to.include(`${show.name}/Invited/${user.lastName}, ${user.firstName} - Untitled.jpg`\n              , 'Files Present: ' + files + `\\nshould contain file:\\n ${show.name}/Invited/${user.lastName}, ${user.firstName} - Untitled.jpg\\n`)\n              expect(files).to.include(`${show.name}/Invited/${user.lastName}, ${user.firstName} - Untitled (1).jpg`\n              , 'Files Present: ' + files + `\\nshould contain file:\\n ${show.name}/Invited/${user.lastName}, ${user.firstName} - Untitled (1).jpg\\n`)\n              done()\n              }, 500)\n            })\n        )\n          })"}