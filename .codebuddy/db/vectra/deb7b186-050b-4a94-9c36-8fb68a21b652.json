{"chunk":9,"numChunks":11,"fileHash":"bVgcirSbZtc05aSdijvkfgnA39tQgHOLY8GCqKrLTt4=","filePath":"backend/test/resolvers/showQuery.js","content":"/* eslint-disable no-unused-expressions */\ndescribe('Show Queries', function () {\n  describe('Shows query', function () {\n    describe('Success', function () {\n      it('Gets all shows', function (done) {\n        Promise.all([fakeShow(), fakeShow()]).then(() => {\n          shows('', {}, { auth: { type: 'ADMIN' } }).then((result) => {\n            expect(result.length).to.equal(2)\n            done()\n          })\n        })\n      })\n      it('Gets all shows in order if requested', function (done) {\n        Promise.all([fakeShow({ name: 'a', entryStart: '2001-11-20' }), fakeShow({ name: 'b', entryStart: '2001-11-15' })])\n          .then(() => {\n            shows('', { orderBy: { sort: 'entryStart', direction: 'DESC' } },\n              { auth: { type: 'ADMIN' } }).then((result) => {\n              expect(result.length).to.equal(2)\n              expect(result[0].name).to.equal('a')\n              done()\n            })\n          })\n      })\n      it('gets all shows for a user asking for shows they\\'ve made entries on (including group)', function (done) {\n        fakeUser().then((u) => {\n          fakeGroup({ user: u }).then((g) => {\n            Promise.all([fakeImageEntry({ user: u }), fakeImageEntry({ group: g }), fakeImageEntry()])\n              .then((imageEntries) => {\n                execGraphql(\n                  `query {\n                    shows(studentUsername: \"${u.username}\"){\n                      id\n                      entries {\n                        id\n                      }\n                    }\n                  }\n                  `,\n                  { type: 'STUDENT', username: u.username }\n                ).then(result => {\n                  expect(result.data.shows.length).to.equal(2)\n                  expect(result.data.shows[0].entries.length).to"}