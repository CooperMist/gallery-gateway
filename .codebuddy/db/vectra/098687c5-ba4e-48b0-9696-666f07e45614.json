{"chunk":0,"numChunks":46,"fileHash":"rgY5LIVyu8ZXHuBTfXMXoWx/ctH+OGAgjLxB0j9j1Bs=","filePath":"backend/routes/download.js","content":"import fs from 'fs'\nimport path from 'path'\nimport { promisify } from 'util'\nimport { Router } from 'express'\nimport archiver from 'archiver'\nimport stringify from 'csv-stringify'\nimport moment from 'moment'\nimport Entry from '../models/entry'\nimport Group from '../models/group'\nimport Image from '../models/image'\nimport Video from '../models/video'\nimport OtherMedia from '../models/other'\nimport Show from '../models/show'\nimport User from '../models/user'\nimport { IMAGE_ENTRY, VIDEO_ENTRY, OTHER_ENTRY, ADMIN } from '../constants'\nimport config from '../config'\nimport sequelize from '../config/sequelize'\nimport { parseToken } from '../helpers/jwt'\nimport Portfolio from '../models/portfolio'\nimport Other from '../models/other'\nimport PortfolioPeriod from '../models/portfolioPeriod'\nconst readFileAsync = promisify(fs.readFile)\nconst stringifyAsync = promisify(stringify)\nconst IMAGE_DIR = config.get('upload:imageDir')\nconst PDF_DIR = config.get('upload:pdfDir')\nconst YOUTUBE_BASE_URL = 'https://www.youtube.com/watch?v='\nconst VIMEO_BASE_URL = 'https://vimeo.com/'\nconst router = Router()\nconst ensureAdminDownloadToken = (req, res, next) => {\n  const token = req.query.token\n  next()\n  parseToken(token, (err, decoded) => {\n    if (err || decoded.type !== ADMIN) {\n      res.status(401)\n        .type('html')\n        .send('Permission Denied')\n    } else {\n      next()\n    }\n  })\n}"}